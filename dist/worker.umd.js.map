{"version":3,"file":"worker.umd.js","sources":["../src/worker.js"],"sourcesContent":["/* globals firebase, setTimeout, setInterval */\n\nconst fireworkers = [];\nconst apps = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nclass LocalStorage {\n  constructor() {\n    this._items = [];\n    this._pendingItems = [];\n    this._initialized = false;\n    this._flushPending = this.flushPending.bind(this);\n  }\n\n  init(items) {\n    if (!this._initialized) {\n      this._items = items;\n      this._initialized = true;\n    }\n  }\n\n  _update(item) {\n    if (!this._pendingItems.length) Promise.resolve().then(this._flushPending);\n    this._pendingItems.push(item);\n  }\n\n  flushPending() {\n    if (!this._pendingItems.length) return;\n    if (!fireworkers.length) {\n      setTimeout(this._flushPending, 200);\n      return;\n    }\n    fireworkers[0]._send({msg: 'updateLocalStorage', items: this._pendingItems});\n    this._pendingItems = [];\n  }\n\n  get length() {return this._items.length;}\n\n  key(n) {\n    return this._items[n].key;\n  }\n\n  getItem(key) {\n    for (const item of this._items) {\n      if (item.key === key) return item.value;\n    }\n    return null;\n  }\n\n  setItem(key, value) {\n    let targetItem;\n    for (const item of this._items) {\n      if (item.key === key) {\n        targetItem = item;\n        item.value = value;\n        break;\n      }\n    }\n    if (!targetItem) {\n      targetItem = {key, value};\n      this._items.push(targetItem);\n    }\n    this._update(targetItem);\n  }\n\n  removeItem(key) {\n    for (let i = 0; i < this._items.length; i++) {\n      if (this._items[i].key === key) {\n        this._items.splice(i, 1);\n        this._update({key, value: null});\n        break;\n      }\n    }\n  }\n\n  clear() {\n    for (const item in this._items) {\n      this._update({key: item.key, value: null});\n    }\n    this._items = [];\n  }\n}\n\nself.localStorage = new LocalStorage();\n\n\nclass Branch {\n  constructor() {\n    this._root = null;\n  }\n\n  set(value) {\n    this._root = value;\n  }\n\n  diff(value, pathPrefix) {\n    const updates = {};\n    const segments = pathPrefix === '/' ? [''] : pathPrefix.split('/');\n    if (this._diffRecursively(this._root, value, segments, updates)) {\n      this._root = value;\n      updates[pathPrefix] = value;\n    }\n    return updates;\n  }\n\n  _diffRecursively(oldValue, newValue, segments, updates) {\n    if (oldValue === undefined) oldValue = null;\n    if (newValue === undefined) newValue = null;\n    if (oldValue === null) return newValue !== null;\n    if (oldValue instanceof Object && newValue instanceof Object) {\n      let replace = true;\n      const keysToReplace = [];\n      for (const childKey in newValue) {\n        if (!newValue.hasOwnProperty(childKey)) continue;\n        const replaceChild = this._diffRecursively(\n          oldValue[childKey], newValue[childKey], segments.concat(childKey), updates);\n        if (replaceChild) {\n          keysToReplace.push(childKey);\n        } else {\n          replace = false;\n        }\n      }\n      if (replace) return true;\n      for (const childKey in oldValue) {\n        if (!oldValue.hasOwnProperty(childKey) || newValue.hasOwnProperty(childKey)) continue;\n        updates[segments.concat(childKey).join('/')] = null;\n        delete oldValue[childKey];\n      }\n      for (const childKey of keysToReplace) {\n        updates[segments.concat(childKey).join('/')] = newValue[childKey];\n        oldValue[childKey] = newValue[childKey];\n      }\n    } else {\n      return newValue !== oldValue;\n    }\n  }\n}\n\n\nexport default class Fireworker {\n  constructor(port) {\n    this.ping();\n    this._port = port;\n    this._lastWriteSerial = 0;\n    this._configError = undefined;\n    this._callbacks = {};\n    this._messages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    port.onmessage = this._receive.bind(this);\n  }\n\n  init({storage, config}) {\n    if (storage) self.localStorage.init(storage);\n    if (config) {\n      try {\n        if (!apps[config.databaseURL]) {\n          apps[config.databaseURL] = firebase.initializeApp(config, config.databaseURL);\n        }\n        this._app = apps[config.databaseURL];\n        this._app.database();\n        this._app.auth();\n        this._configError = undefined;\n      } catch (e) {\n        this._configError = e;\n        throw e;\n      }\n    } else if (this._configError) {\n      throw this._configError;\n    }\n    return {\n      exposedFunctionNames: Object.keys(Fireworker._exposed),\n      version: VERSION,\n      firebaseSdkVersion: firebase.SDK_VERSION\n    };\n  }\n\n  destroy() {\n    for (const key in this._callbacks) {\n      const callback = this._callbacks[key];\n      if (callback.cancel) callback.cancel();\n    }\n    this._callbacks = {};\n    this._port.onmessage = null;\n    this._messages = [];\n    const k = fireworkers.indexOf(this);\n    if (k >= 0) fireworkers[k] = null;\n  }\n\n  ping() {\n    this.lastTouched = Date.now();\n  }\n\n  bounceConnection() {\n    if (!this._app) throw new Error('Must provide Firebase configuration data first');\n    this._app.database().goOffline();\n    this._app.database().goOnline();\n  }\n\n  _receive(event) {\n    Fireworker._firstMessageReceived = true;\n    this.lastTouched = Date.now();\n    for (const message of event.data) this._receiveMessage(message);\n  }\n\n  _receiveMessage(message) {\n    let promise;\n    try {\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      if (message.writeSerial) {\n        this._lastWriteSerial = Math.max(this._lastWriteSerial, message.writeSerial);\n      }\n      promise = Promise.resolve(fn.call(this, message));\n    } catch (e) {\n      e.immediateFailure = true;\n      promise = Promise.reject(e);\n    }\n    if (!message.oneWay) {\n      promise.then(result => {\n        this._send({msg: 'resolve', id: message.id, result});\n      }, error => {\n        this._send({msg: 'reject', id: message.id, error: errorToJson(error)});\n      });\n    }\n  }\n\n  _send(message) {\n    if (!this._messages.length) Promise.resolve().then(this._flushMessageQueue);\n    this._messages.push(message);\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._messages);\n    this._messages = [];\n  }\n\n  call({name, args}) {\n    try {\n      return Promise.resolve(Fireworker._exposed[name].apply(null, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  authWithCustomToken({url, authToken}) {\n    return this._app.auth().signInWithCustomToken(authToken)\n      .then(result => userToJson(result.user));\n  }\n\n  unauth({url}) {\n    return this._app.auth().signOut();\n  }\n\n  onAuth({url, callbackId}) {\n    const authCallback = this._callbacks[callbackId] = this._onAuthCallback.bind(this, callbackId);\n    authCallback.cancel = this._app.auth().onAuthStateChanged(authCallback);\n  }\n\n  _onAuthCallback(callbackId, user) {\n    userToJson(user).then(jsonUser => {\n      this._send({msg: 'callback', id: callbackId, args: [jsonUser]});\n    });\n  }\n\n  set({url, value}) {\n    return this._createRef(url).set(value);\n  }\n\n  update({url, value}) {\n    return this._createRef(url).update(value);\n  }\n\n  once({url}) {\n    return this._createRef(url).once('value').then(snapshot => this._snapshotToJson(snapshot));\n  }\n\n  on({listenerKey, url, spec, eventType, callbackId, options}) {\n    options = options || {};\n    if (options.sync) options.branch = new Branch();\n    options.cancel = this.off.bind(this, {listenerKey, url, spec, eventType, callbackId});\n    const snapshotCallback = this._callbacks[callbackId] =\n      this._onSnapshotCallback.bind(this, callbackId, options);\n    snapshotCallback.listenerKey = listenerKey;\n    snapshotCallback.eventType = eventType;\n    snapshotCallback.cancel = options.cancel;\n    const cancelCallback = this._onCancelCallback.bind(this, callbackId);\n    this._createRef(url, spec).on(eventType, snapshotCallback, cancelCallback);\n  }\n\n  off({listenerKey, url, spec, eventType, callbackId}) {\n    let snapshotCallback;\n    if (callbackId) {\n      // Callback IDs will not be reused across on() calls, so it's safe to just delete it.\n      snapshotCallback = this._callbacks[callbackId];\n      delete this._callbacks[callbackId];\n    } else {\n      for (const key of Object.keys(this._callbacks)) {\n        if (!this._callbacks.hasOwnProperty(key)) continue;\n        const callback = this._callbacks[key];\n        if (callback.listenerKey === listenerKey &&\n            (!eventType || callback.eventType === eventType)) {\n          delete this._callbacks[key];\n        }\n      }\n    }\n    this._createRef(url, spec).off(eventType, snapshotCallback);\n  }\n\n  _onSnapshotCallback(callbackId, options, snapshot) {\n    if (options.sync && options.rest) {\n      const path = decodeURIComponent(\n        snapshot.ref.toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n      let value;\n      try {\n        value = normalizeFirebaseValue(snapshot.val());\n      } catch (e) {\n        options.cancel();\n        this._onCancelCallback(callbackId, e);\n        return;\n      }\n      const updates = options.branch.diff(value, path);\n      for (const childPath in updates) {\n        if (!updates.hasOwnProperty(childPath)) continue;\n        this._send({\n          msg: 'callback', id: callbackId,\n          args: [null, {\n            path: childPath, value: updates[childPath], writeSerial: this._lastWriteSerial\n          }]\n        });\n      }\n    } else {\n      try {\n        const snapshotJson = this._snapshotToJson(snapshot);\n        if (options.sync) options.branch.set(snapshotJson.value);\n        this._send({msg: 'callback', id: callbackId, args: [null, snapshotJson]});\n        options.rest = true;\n      } catch (e) {\n        options.cancel();\n        this._onCancelCallback(callbackId, e);\n      }\n    }\n  }\n\n  _onCancelCallback(callbackId, error) {\n    delete this._callbacks[callbackId];\n    this._send({msg: 'callback', id: callbackId, args: [errorToJson(error)]});\n  }\n\n  transaction({url, oldValue, relativeUpdates}) {\n    const transactionPath = decodeURIComponent(url.replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    const ref = this._createRef(url);\n    const branch = new Branch();\n    let stale, committedValue;\n\n    return ref.transaction(value => {\n      committedValue = undefined;\n      value = normalizeFirebaseValue(value);\n      stale = !areEqualNormalFirebaseValues(value, oldValue);\n      if (stale) value = oldValue;\n      if (relativeUpdates) {\n        for (const relativePath in relativeUpdates) {\n          if (!relativeUpdates.hasOwnProperty(relativePath)) continue;\n          if (relativePath) {\n            const segments = relativePath.split('/');\n            if (value === undefined || value === null) value = {};\n            let object = value;\n            for (let i = 0; i < segments.length - 1; i++) {\n              const key = segments[i];\n              let child = object[key];\n              if (child === undefined || child === null) child = object[key] = {};\n              object = child;\n            }\n            object[segments[segments.length - 1]] = relativeUpdates[relativePath];\n          } else {\n            value = relativeUpdates[relativePath];\n          }\n        }\n      }\n      branch.set(value);\n      if (!stale) {\n        committedValue = value;\n        return value;\n      }\n    }).then(result => {\n      const snapshots = [];\n      const updates = branch.diff(normalizeFirebaseValue(result.snapshot.val()), transactionPath);\n      for (const path in updates) {\n        if (!updates.hasOwnProperty(path)) continue;\n        snapshots.push({\n          path, value: updates[path], writeSerial: result.writeSerial || this._lastWriteSerial\n        });\n      }\n      return {committed: !stale, snapshots};\n    }, error => {\n      if (error.message === 'set' || error.message === 'disconnect') {\n        return ref.once('value').then(snapshot => {\n          return {committed: false, snapshots: [snapshot], writeSerial: this._lastWriteSerial};\n        });\n      }\n      error.committedValue = committedValue;\n      return Promise.reject(error);\n    });\n  }\n\n  _snapshotToJson(snapshot) {\n    const path =\n      decodeURIComponent(snapshot.ref.toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    return {\n      path, value: normalizeFirebaseValue(snapshot.val()), writeSerial: this._lastWriteSerial\n    };\n  }\n\n  onDisconnect({url, method, value}) {\n    const onDisconnect = this._createRef(url).onDisconnect();\n    return onDisconnect[method](value);\n  }\n\n  _createRef(url, spec) {\n    if (!this._app) throw new Error('Must provide Firebase configuration data first');\n    try {\n      let ref = this._app.database().refFromURL(url);\n      if (spec) {\n        switch (spec.by) {\n          case '$key': ref = ref.orderByKey(); break;\n          case '$value': ref = ref.orderByValue(); break;\n          default: ref = ref.orderByChild(spec.by); break;\n        }\n        if (spec.at) ref = ref.equalTo(spec.at);\n        else if (spec.from) ref = ref.startAt(spec.from);\n        else if (spec.to) ref = ref.endAt(spec.to);\n        if (spec.first) ref = ref.limitToFirst(spec.first);\n        else if (spec.last) ref = ref.limitToLast(spec.last);\n      }\n      return ref;\n    } catch (e) {\n      e.extra = {url, spec};\n      throw e;\n    }\n  }\n\n  static expose(fn, name) {\n    name = name || fn.name;\n    if (!name) throw new Error('Cannot expose a function with no name: ' + fn);\n    if (Fireworker._exposed.hasOwnProperty(name)) {\n      throw new Error(`Function ${name}() already exposed`);\n    }\n    if (Fireworker._firstMessageReceived) {\n      throw new Error('Too late to expose function, worker in use');\n    }\n    Fireworker._exposed[name] = fn;\n  }\n}\n\nFireworker._exposed = {};\nFireworker._firstMessageReceived = false;\n\nfunction errorToJson(error) {\n  const json = {name: error.name};\n  const propertyNames = Object.getOwnPropertyNames(error);\n  for (const propertyName of propertyNames) {\n    json[propertyName] = error[propertyName];\n  }\n  return json;\n}\n\nfunction normalizeFirebaseValue(value) {\n  if (Array.isArray(value)) {\n    const normalValue = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      if (item === undefined || item === null) continue;\n      normalValue[i] = normalizeFirebaseValue(item);\n    }\n    return normalValue;\n  }\n  if (value instanceof Object) {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) value[key] = normalizeFirebaseValue(value[key]);\n    }\n  }\n  return value;\n}\n\nfunction userToJson(user) {\n  if (!user) return Promise.resolve(user);\n  const json = user.toJSON();\n  delete json.stsTokenManager;\n  return user.getIdTokenResult().then(result => {\n    delete result.token;\n    json.idToken = result;\n    return json;\n  });\n}\n\n\nfunction areEqualNormalFirebaseValues(a, b) {\n  if (a === b) return true;\n  if ((a === null || a === undefined) && (b === null || b === undefined)) return true;\n  if (a === null || b === null) return false;\n  if (!(typeof a === 'object' && typeof b === 'object')) return false;\n  for (const key in a) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n    if (!areEqualNormalFirebaseValues(a[key], b[key])) return false;\n  }\n  for (const key in b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n  }\n  return true;\n}\n\nfunction acceptConnections() {\n  if (typeof onconnect !== 'undefined') {\n    self.onconnect = function(event) {\n      fireworkers.push(new Fireworker(event.ports[0]));\n    };\n  } else {\n    fireworkers.push(new Fireworker(self));\n  }\n  self.localStorage.flushPending();\n}\n\nconst CONNECTION_CHECK_INTERVAL = 60 * 1000;\nlet lastConnectionCheck = Date.now();\nsetInterval(function findAbandonedConnections() {\n  const now = Date.now(), gap = now - lastConnectionCheck - CONNECTION_CHECK_INTERVAL;\n  lastConnectionCheck = now;\n  fireworkers.forEach(worker => {\n    if (!worker) return;\n    if (gap >= 1000 && worker.lastTouched <= now - gap) worker.lastTouched += gap;\n    if (now - worker.lastTouched >= 3 * CONNECTION_CHECK_INTERVAL) worker.destroy();\n  });\n  let k;\n  while ((k = fireworkers.indexOf(null)) >= 0) fireworkers.splice(k, 1);\n}, CONNECTION_CHECK_INTERVAL);\n\nself.window = self;\nacceptConnections();\n"],"names":["const","this","let","childKey","key"],"mappings":"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"}