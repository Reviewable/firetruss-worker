{"version":3,"sources":["../src/worker.js"],"names":["interceptConsoleLog","consoleIntercepted","const","lastTestIndex","originalLog","console","log","let","message","Array","prototype","join","call","arguments","test","apply","replace","match","g1","g2","simulationConsoleLogs","undefined","length","pop","push","errorToJson","error","json","name","propertyNames","Object","getOwnPropertyNames","i","list","propertyName","createRef","url","spec","context","ref","Firebase","by","orderByKey","orderByValue","orderByChild","at","equalTo","from","startAt","to","endAt","first","limitToFirst","last","limitToLast","e","extra","normalizeFirebaseValue","value","isArray","normalValue","item","key","hasOwnProperty","areEqualNormalFirebaseValues","a","b","acceptConnections","onconnect","self","event","fireworkers","Fireworker","ports","localStorage","flushPending","simulationQueue","Promise","resolve","LocalStorage","this","_items","_pendingItems","_initialized","_flushPending","bind","init","items","_update","then","_send","msg","prototypeAccessors","get","n","getItem","setItem","targetItem","removeItem","this$1","splice","clear","Branch","_root","set","diff","pathPrefix","updates","segments","split","_diffRecursively","oldValue","newValue","keysToReplace","childKey","concat","port","ping","_port","_lastWriteSerial","_callbacks","_messages","_flushMessageQueue","onmessage","_receive","storage","exposedFunctionNames","keys","_exposed","version","firebaseSdkVersion","SDK_VERSION","destroy","callback","cancel","k","indexOf","lastTouched","Date","now","bounceConnection","goOffline","goOnline","_firstMessageReceived","data","_receiveMessage","promise","fn","Error","writeSerial","reject","oneWay","result","id","postMessage","args","authWithCustomToken","authToken","options","unauth","onAuth","callbackId","authCallback","_onAuthCallback","_offAuth","offAuth","auth","update","on","listenerKey","eventType","sync","branch","snapshotCallback","_onSnapshotCallback","off","cancelCallback","_onCancelCallback","snapshot","rest","path","decodeURIComponent","toString","val","exists","valueError","childPath","snapshotJson","_snapshotToJson","transaction","ref$1","stale","relativeUpdates","relativePath","object","child","onDisconnect","method","simulate","token","simulatedFirebase","catch","remember","code","toLowerCase","expose","lastConnectionCheck","setInterval","gap","forEach","worker","window"],"mappings":"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","file":"worker.umd.min.js","sourcesContent":["/* globals Firebase, setInterval */\n\nconst fireworkers = [];\nlet simulationQueue = Promise.resolve(), consoleIntercepted = false, simulationConsoleLogs;\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nclass LocalStorage {\n  constructor() {\n    this._items = [];\n    this._pendingItems = [];\n    this._initialized = false;\n    this._flushPending = this.flushPending.bind(this);\n  }\n\n  init(items) {\n    if (!this._initialized) {\n      this._items = items;\n      this._initialized = true;\n    }\n  }\n\n  _update(item) {\n    if (!this._pendingItems.length) Promise.resolve().then(this._flushPending);\n    this._pendingItems.push(item);\n  }\n\n  flushPending() {\n    if (!fireworkers.length) return;\n    fireworkers[0]._send({msg: 'updateLocalStorage', items: this._pendingItems});\n    this._pendingItems = [];\n  }\n\n  get length() {return this._items.length;}\n\n  key(n) {\n    return this._items[n].key;\n  }\n\n  getItem(key) {\n    for (let item of this._items) {\n      if (item.key === key) return item.value;\n    }\n    return null;\n  }\n\n  setItem(key, value) {\n    let targetItem;\n    for (let item of this._items) {\n      if (item.key === key) {\n        targetItem = item;\n        item.value = value;\n        break;\n      }\n    }\n    if (!targetItem) {\n      targetItem = {key, value};\n      this._items.push(targetItem);\n    }\n    this._update(targetItem);\n  }\n\n  removeItem(key) {\n    for (let i = 0; i < this._items.length; i++) {\n      if (this._items[i].key === key) {\n        this._items.splice(i, 1);\n        this._update({key, value: null});\n        break;\n      }\n    }\n  }\n\n  clear() {\n    for (let item in this._items) {\n      this._update({key: item.key, value: null});\n    }\n    this._items = [];\n  }\n}\n\nself.localStorage = new LocalStorage();\n\n\nclass Branch {\n  constructor() {\n    this._root = null;\n  }\n\n  set(value) {\n    this._root = value;\n  }\n\n  diff(value, pathPrefix) {\n    const updates = {};\n    const segments = pathPrefix === '/' ? [''] : pathPrefix.split('/');\n    if (this._diffRecursively(this._root, value, segments, updates)) {\n      this._root = value;\n      updates[pathPrefix] = value;\n    }\n    return updates;\n  }\n\n  _diffRecursively(oldValue, newValue, segments, updates) {\n    if (oldValue === undefined) oldValue = null;\n    if (newValue === undefined) newValue = null;\n    if (oldValue === null) return newValue !== null;\n    if (oldValue instanceof Object && newValue instanceof Object) {\n      let replace = true;\n      const keysToReplace = [];\n      for (let childKey in newValue) {\n        if (!newValue.hasOwnProperty(childKey)) continue;\n        if (this._diffRecursively(\n            oldValue[childKey], newValue[childKey], segments.concat(childKey), updates)) {\n          keysToReplace.push(childKey);\n        } else {\n          replace = false;\n        }\n      }\n      if (replace) return true;\n      for (let childKey in oldValue) {\n        if (!oldValue.hasOwnProperty(childKey) || newValue.hasOwnProperty(childKey)) continue;\n        updates[segments.concat(childKey).join('/')] = null;\n        delete oldValue[childKey];\n      }\n      for (let childKey of keysToReplace) {\n        updates[segments.concat(childKey).join('/')] = newValue[childKey];\n        oldValue[childKey] = newValue[childKey];\n      }\n    } else {\n      return newValue !== oldValue;\n    }\n  }\n}\n\n\nexport default class Fireworker {\n  constructor(port) {\n    this.ping();\n    this._port = port;\n    this._lastWriteSerial = 0;\n    this._callbacks = {};\n    this._messages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    port.onmessage = this._receive.bind(this);\n  }\n\n  init({storage, url}) {\n    if (storage) self.localStorage.init(storage);\n    if (url) createRef(url);\n    return {\n      exposedFunctionNames: Object.keys(Fireworker._exposed),\n      version: VERSION,\n      firebaseSdkVersion: Firebase.SDK_VERSION\n    };\n  }\n\n  destroy() {\n    for (let key in this._callbacks) {\n      const callback = this._callbacks[key];\n      if (callback.cancel) callback.cancel();\n    }\n    this._callbacks = {};\n    this._port.onmessage = null;\n    this._messages = [];\n    const k = fireworkers.indexOf(this);\n    if (k >= 0) fireworkers[k] = null;\n  }\n\n  ping() {\n    this.lastTouched = Date.now();\n  }\n\n  bounceConnection() {\n    Firebase.goOffline();\n    Firebase.goOnline();\n  }\n\n  _receive(event) {\n    Fireworker._firstMessageReceived = true;\n    this.lastTouched = Date.now();\n    for (let message of event.data) this._receiveMessage(message);\n  }\n\n  _receiveMessage(message) {\n    let promise;\n    try {\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      if (message.writeSerial) this._lastWriteSerial = message.writeSerial;\n      promise = Promise.resolve(fn.call(this, message));\n    } catch(e) {\n      promise = Promise.reject(e);\n    }\n    if (!message.oneWay) {\n      promise.then(result => {\n        this._send({msg: 'resolve', id: message.id, result: result});\n      }, error => {\n        this._send({msg: 'reject', id: message.id, error: errorToJson(error)});\n      });\n    }\n  }\n\n  _send(message) {\n    if (!this._messages.length) Promise.resolve().then(this._flushMessageQueue);\n    this._messages.push(message);\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._messages);\n    this._messages = [];\n  }\n\n  call({name, args}) {\n    try {\n      return Promise.resolve(Fireworker._exposed[name].apply(null, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  authWithCustomToken({url, authToken, options}) {\n    return createRef(url).authWithCustomToken(authToken, options);\n  }\n\n  unauth({url}) {\n    return createRef(url).unauth();\n  }\n\n  onAuth({url, callbackId}) {\n    const authCallback = this._callbacks[callbackId] = this._onAuthCallback.bind(this, callbackId);\n    authCallback.cancel = this._offAuth.bind(this, url, authCallback);\n    createRef(url).onAuth(authCallback);\n  }\n\n  _offAuth(url, authCallback) {\n    createRef(url).offAuth(authCallback);\n  }\n\n  _onAuthCallback(callbackId, auth) {\n    this._send({msg: 'callback', id: callbackId, args: [auth]});\n  }\n\n  set({url, value}) {\n    return createRef(url).set(value);\n  }\n\n  update({url, value}) {\n    return createRef(url).update(value);\n  }\n\n  on({listenerKey, url, spec, eventType, callbackId, options}) {\n    options = options || {};\n    if (options.sync) options.branch = new Branch();\n    const snapshotCallback = this._callbacks[callbackId] =\n      this._onSnapshotCallback.bind(this, callbackId, options);\n    snapshotCallback.listenerKey = listenerKey;\n    snapshotCallback.eventType = eventType;\n    snapshotCallback.cancel = this.off.bind(this, {listenerKey, url, spec, eventType, callbackId});\n    const cancelCallback = this._onCancelCallback.bind(this, callbackId);\n    createRef(url, spec).on(eventType, snapshotCallback, cancelCallback);\n  }\n\n  off({listenerKey, url, spec, eventType, callbackId}) {\n    let snapshotCallback;\n    if (callbackId) {\n      // Callback IDs will not be reused across on() calls, so it's safe to just delete it.\n      snapshotCallback = this._callbacks[callbackId];\n      delete this._callbacks[callbackId];\n    } else {\n      for (let key of Object.keys(this._callbacks)) {\n        if (!this._callbacks.hasOwnProperty(key)) continue;\n        const callback = this._callbacks[key];\n        if (callback.listenerKey === listenerKey &&\n            (!eventType || callback.eventType === eventType)) {\n          delete this._callbacks[key];\n        }\n      }\n    }\n    createRef(url, spec).off(eventType, snapshotCallback);\n  }\n\n  _onSnapshotCallback(callbackId, options, snapshot) {\n    if (options.sync && options.rest) {\n      const path = decodeURIComponent(\n        snapshot.ref().toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n      let value;\n      try {\n        value = normalizeFirebaseValue(snapshot.val());\n      } catch (e) {\n        options.branch.set(null);\n        this._send({\n          msg: 'callback', id: callbackId,\n          args: [null, {path, exists: snapshot.exists(), valueError: errorToJson(e)}]\n        });\n      }\n      const updates = options.branch.diff(value, path);\n      for (let childPath in updates) {\n        if (!updates.hasOwnProperty(childPath)) continue;\n        this._send({\n          msg: 'callback', id: callbackId,\n          args: [null, {path: childPath, value: updates[childPath]}]\n        });\n      }\n    } else {\n      const snapshotJson = this._snapshotToJson(snapshot, options);\n      if (options.sync) options.branch.set(snapshotJson.value);\n      this._send({msg: 'callback', id: callbackId, args: [null, snapshotJson]});\n      options.rest = true;\n    }\n  }\n\n  _onCancelCallback(callbackId, error) {\n    delete this._callbacks[callbackId];\n    this._send({msg: 'callback', id: callbackId, args: [errorToJson(error)]});\n  }\n\n  transaction({url, oldValue, relativeUpdates}) {\n    const ref = createRef(url);\n    let stale;\n\n    return ref.transaction(value => {\n      value = normalizeFirebaseValue(value);\n      stale = !areEqualNormalFirebaseValues(value, oldValue);\n      if (stale) return;\n      if (relativeUpdates) {\n        for (let relativePath in relativeUpdates) {\n          if (!relativeUpdates.hasOwnProperty(relativePath)) continue;\n          if (relativePath) {\n            const segments = relativePath.split('/');\n            if (value === undefined || value === null) value = {};\n            let object = value;\n            for (let i = 0; i < segments.length - 1; i++) {\n              const key = segments[i];\n              let child = object[key];\n              if (child === undefined || child === null) child = object[key] = {};\n              object = child;\n            }\n            object[segments[segments.length - 1]] = relativeUpdates[relativePath];\n          } else {\n            value = relativeUpdates[relativePath];\n          }\n        }\n      }\n      return value;\n    }).then(result => {\n      return !stale;\n    }, error => {\n      if (error.message === 'set' || error.message === 'disconnect') return false;\n      return Promise.reject(error);\n    });\n  }\n\n  _snapshotToJson(snapshot, options) {\n    const path =\n      decodeURIComponent(snapshot.ref().toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    try {\n      return {\n        path, value: normalizeFirebaseValue(snapshot.val()), writeSerial: this._lastWriteSerial\n      };\n    } catch (e) {\n      return {\n        path, exists: snapshot.exists(), valueError: errorToJson(e),\n        writeSerial: this._lastWriteSerial\n      };\n    }\n  }\n\n  onDisconnect({url, method, value}) {\n    const onDisconnect = createRef(url).onDisconnect();\n    return onDisconnect[method].call(onDisconnect, value);\n  }\n\n  simulate({token, method, url, args}) {\n    interceptConsoleLog();\n    let simulatedFirebase;\n    return (simulationQueue = simulationQueue.catch(() => {}).then(() => {\n      simulationConsoleLogs = [];\n      simulatedFirebase = createRef(url, null, 'permission_denied_simulator');\n      simulatedFirebase.unauth();\n      return simulatedFirebase.authWithCustomToken(token, function() {}, {remember: 'none'});\n    }).then(() => {\n      return simulatedFirebase[method].apply(simulatedFirebase, args);\n    }).then(() => {\n      return null;\n    }, e => {\n      const code = e.code || e.message;\n      if (code && code.toLowerCase() === 'permission_denied') {\n        return simulationConsoleLogs.join('\\n');\n      } else {\n        return 'Got a different error in simulation: ' + e;\n      }\n    }));\n  }\n\n  static expose(fn, name) {\n    name = name || fn.name;\n    if (!name) throw new Error('Cannot expose a function with no name: ' + fn);\n    if (Fireworker._exposed.hasOwnProperty(name)) {\n      throw new Error(`Function ${name}() already exposed`);\n    }\n    if (Fireworker._firstMessageReceived) {\n      throw new Error('Too late to expose function, worker in use');\n    }\n    Fireworker._exposed[name] = fn;\n  }\n}\n\nFireworker._exposed = {};\nFireworker._firstMessageReceived = false;\n\n\nfunction interceptConsoleLog() {\n  if (consoleIntercepted) return;\n  const originalLog = console.log;\n  let lastTestIndex;\n  console.log = function() {\n    let message = Array.prototype.join.call(arguments, ' ');\n    if (!/^(FIREBASE: \\n?)+/.test(message)) return originalLog.apply(console, arguments);\n    message = message\n      .replace(/^(FIREBASE: \\n?)+/, '')\n      .replace(/^\\s+([^.]*):(?:\\.(read|write|validate):)?.*/g, function(match, g1, g2) {\n        g2 = g2 || 'read';\n        return ' ' + g2 + ' ' + g1;\n      });\n    if (/^\\s+/.test(message)) {\n      const match = message.match(/^\\s+=> (true|false)/);\n      if (match) {\n        simulationConsoleLogs[lastTestIndex] =\n          (match[1] === 'true' ? ' \\u2713' : ' \\u2717') + simulationConsoleLogs[lastTestIndex];\n        lastTestIndex = undefined;\n      } else {\n        if (lastTestIndex === simulationConsoleLogs.length - 1) simulationConsoleLogs.pop();\n        simulationConsoleLogs.push(message);\n        lastTestIndex = simulationConsoleLogs.length - 1;\n      }\n    } else if (/^\\d+:\\d+: /.test(message)) {\n      simulationConsoleLogs.push('   ' + message);\n    } else {\n      if (lastTestIndex === simulationConsoleLogs.length - 1) simulationConsoleLogs.pop();\n      simulationConsoleLogs.push(message);\n      lastTestIndex = undefined;\n    }\n  };\n  consoleIntercepted = true;\n}\n\nfunction errorToJson(error) {\n  const json = {name: error.name};\n  const propertyNames = Object.getOwnPropertyNames(error);\n  for (let propertyName of propertyNames) {\n    json[propertyName] = error[propertyName];\n  }\n  return json;\n}\n\nfunction createRef(url, spec, context) {\n  try {\n    let ref = new Firebase(url, context);\n    if (spec) {\n      switch (spec.by) {\n        case '$key': ref = ref.orderByKey(); break;\n        case '$value': ref = ref.orderByValue(); break;\n        default: ref = ref.orderByChild(spec.by); break;\n      }\n      if (spec.at) ref = ref.equalTo(spec.at);\n      else if (spec.from) ref = ref.startAt(spec.from);\n      else if (spec.to) ref = ref.endAt(spec.to);\n      if (spec.first) ref = ref.limitToFirst(spec.first);\n      else if (spec.last) ref = ref.limitToLast(spec.last);\n    }\n    return ref;\n  } catch (e) {\n    e.extra = {url, spec, context};\n    throw e;\n  }\n}\n\nfunction normalizeFirebaseValue(value) {\n  if (Array.isArray(value)) {\n    const normalValue = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      if (item === undefined || item === null) continue;\n      normalValue[i] = normalizeFirebaseValue(item);\n    }\n    return normalValue;\n  }\n  if (value instanceof Object) {\n    for (let key in value) {\n      if (value.hasOwnProperty(key)) value[key] = normalizeFirebaseValue(value[key]);\n    }\n  }\n  return value;\n}\n\n\nfunction areEqualNormalFirebaseValues(a, b) {\n  if (a === b) return true;\n  if (!(typeof a === 'object' && typeof b === 'object')) return false;\n  for (let key in a) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n    if (!areEqualNormalFirebaseValues(a[key], b[key])) return false;\n  }\n  for (let key in b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n  }\n  return true;\n}\n\nfunction acceptConnections() {\n  if (typeof onconnect !== 'undefined') {\n    self.onconnect = function(event) {\n      fireworkers.push(new Fireworker(event.ports[0]));\n    };\n  } else {\n    fireworkers.push(new Fireworker(self));\n  }\n  self.localStorage.flushPending();\n}\n\nconst CONNECTION_CHECK_INTERVAL = 60 * 1000;\nlet lastConnectionCheck = Date.now();\nsetInterval(function findAbandonedConnections() {\n  const now = Date.now(), gap = now - lastConnectionCheck - CONNECTION_CHECK_INTERVAL;\n  lastConnectionCheck = now;\n  fireworkers.forEach(worker => {\n    if (!worker) return;\n    if (gap >= 1000 && worker.lastTouched <= now - gap) worker.lastTouched += gap;\n    if (now - worker.lastTouched >= 3 * CONNECTION_CHECK_INTERVAL) worker.destroy();\n  });\n  let k;\n  while ((k = fireworkers.indexOf(null)) >= 0) fireworkers.splice(k, 1);\n}, CONNECTION_CHECK_INTERVAL);\n\nself.window = self;\nacceptConnections();\n"]}