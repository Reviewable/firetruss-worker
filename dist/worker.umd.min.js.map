{"version":3,"sources":["../src/worker.js"],"names":["interceptConsoleLog","consoleIntercepted","const","lastTestIndex","originalLog","console","log","let","message","Array","prototype","join","call","arguments","test","apply","replace","match","g1","g2","simulationConsoleLogs","undefined","length","pop","push","errorToJson","error","json","name","propertyNames","Object","getOwnPropertyNames","i","list","propertyName","createRef","url","spec","context","ref","Firebase","by","orderByKey","orderByValue","orderByChild","at","equalTo","from","startAt","to","endAt","first","limitToFirst","last","limitToLast","e","extra","normalizeFirebaseValue","value","isArray","normalValue","item","key","hasOwnProperty","areEqualNormalFirebaseValues","a","b","acceptConnections","onconnect","self","event","fireworkers","Fireworker","ports","localStorage","flushPending","simulationQueue","Promise","resolve","LocalStorage","this","_items","_pendingItems","_initialized","_flushPending","bind","init","items","_update","then","setTimeout","_send","msg","prototypeAccessors","get","n","getItem","setItem","targetItem","removeItem","this$1","splice","clear","Branch","_root","set","diff","pathPrefix","updates","segments","split","_diffRecursively","oldValue","newValue","keysToReplace","childKey","concat","port","ping","_port","_lastWriteSerial","_callbacks","_messages","_flushMessageQueue","onmessage","_receive","storage","exposedFunctionNames","keys","_exposed","version","firebaseSdkVersion","SDK_VERSION","destroy","callback","cancel","k","indexOf","lastTouched","Date","now","bounceConnection","goOffline","goOnline","_firstMessageReceived","data","_receiveMessage","promise","fn","Error","writeSerial","reject","oneWay","result","id","postMessage","args","authWithCustomToken","authToken","options","unauth","onAuth","callbackId","authCallback","_onAuthCallback","_offAuth","offAuth","auth","update","on","listenerKey","eventType","sync","branch","snapshotCallback","_onSnapshotCallback","off","cancelCallback","_onCancelCallback","snapshot","rest","path","decodeURIComponent","toString","val","exists","valueError","childPath","snapshotJson","_snapshotToJson","transaction","ref$1","stale","currentValue","relativeUpdates","relativePath","object","child","committed","onDisconnect","method","simulate","token","simulatedFirebase","catch","remember","code","toLowerCase","expose","lastConnectionCheck","setInterval","gap","forEach","worker","window"],"mappings":"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","file":"worker.umd.min.js","sourcesContent":["/* globals Firebase, setTimeout, setInterval */\n\nconst fireworkers = [];\nlet simulationQueue = Promise.resolve(), consoleIntercepted = false, simulationConsoleLogs;\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nclass LocalStorage {\n  constructor() {\n    this._items = [];\n    this._pendingItems = [];\n    this._initialized = false;\n    this._flushPending = this.flushPending.bind(this);\n  }\n\n  init(items) {\n    if (!this._initialized) {\n      this._items = items;\n      this._initialized = true;\n    }\n  }\n\n  _update(item) {\n    if (!this._pendingItems.length) Promise.resolve().then(this._flushPending);\n    this._pendingItems.push(item);\n  }\n\n  flushPending() {\n    if (!this._pendingItems.length) return;\n    if (!fireworkers.length) {\n      setTimeout(this._flushPending, 200);\n      return;\n    }\n    fireworkers[0]._send({msg: 'updateLocalStorage', items: this._pendingItems});\n    this._pendingItems = [];\n  }\n\n  get length() {return this._items.length;}\n\n  key(n) {\n    return this._items[n].key;\n  }\n\n  getItem(key) {\n    for (let item of this._items) {\n      if (item.key === key) return item.value;\n    }\n    return null;\n  }\n\n  setItem(key, value) {\n    let targetItem;\n    for (let item of this._items) {\n      if (item.key === key) {\n        targetItem = item;\n        item.value = value;\n        break;\n      }\n    }\n    if (!targetItem) {\n      targetItem = {key, value};\n      this._items.push(targetItem);\n    }\n    this._update(targetItem);\n  }\n\n  removeItem(key) {\n    for (let i = 0; i < this._items.length; i++) {\n      if (this._items[i].key === key) {\n        this._items.splice(i, 1);\n        this._update({key, value: null});\n        break;\n      }\n    }\n  }\n\n  clear() {\n    for (let item in this._items) {\n      this._update({key: item.key, value: null});\n    }\n    this._items = [];\n  }\n}\n\nself.localStorage = new LocalStorage();\n\n\nclass Branch {\n  constructor() {\n    this._root = null;\n  }\n\n  set(value) {\n    this._root = value;\n  }\n\n  diff(value, pathPrefix) {\n    const updates = {};\n    const segments = pathPrefix === '/' ? [''] : pathPrefix.split('/');\n    if (this._diffRecursively(this._root, value, segments, updates)) {\n      this._root = value;\n      updates[pathPrefix] = value;\n    }\n    return updates;\n  }\n\n  _diffRecursively(oldValue, newValue, segments, updates) {\n    if (oldValue === undefined) oldValue = null;\n    if (newValue === undefined) newValue = null;\n    if (oldValue === null) return newValue !== null;\n    if (oldValue instanceof Object && newValue instanceof Object) {\n      let replace = true;\n      const keysToReplace = [];\n      for (let childKey in newValue) {\n        if (!newValue.hasOwnProperty(childKey)) continue;\n        if (this._diffRecursively(\n            oldValue[childKey], newValue[childKey], segments.concat(childKey), updates)) {\n          keysToReplace.push(childKey);\n        } else {\n          replace = false;\n        }\n      }\n      if (replace) return true;\n      for (let childKey in oldValue) {\n        if (!oldValue.hasOwnProperty(childKey) || newValue.hasOwnProperty(childKey)) continue;\n        updates[segments.concat(childKey).join('/')] = null;\n        delete oldValue[childKey];\n      }\n      for (let childKey of keysToReplace) {\n        updates[segments.concat(childKey).join('/')] = newValue[childKey];\n        oldValue[childKey] = newValue[childKey];\n      }\n    } else {\n      return newValue !== oldValue;\n    }\n  }\n}\n\n\nexport default class Fireworker {\n  constructor(port) {\n    this.ping();\n    this._port = port;\n    this._lastWriteSerial = 0;\n    this._callbacks = {};\n    this._messages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    port.onmessage = this._receive.bind(this);\n  }\n\n  init({storage, url}) {\n    if (storage) self.localStorage.init(storage);\n    if (url) createRef(url);\n    return {\n      exposedFunctionNames: Object.keys(Fireworker._exposed),\n      version: VERSION,\n      firebaseSdkVersion: Firebase.SDK_VERSION\n    };\n  }\n\n  destroy() {\n    for (let key in this._callbacks) {\n      const callback = this._callbacks[key];\n      if (callback.cancel) callback.cancel();\n    }\n    this._callbacks = {};\n    this._port.onmessage = null;\n    this._messages = [];\n    const k = fireworkers.indexOf(this);\n    if (k >= 0) fireworkers[k] = null;\n  }\n\n  ping() {\n    this.lastTouched = Date.now();\n  }\n\n  bounceConnection() {\n    Firebase.goOffline();\n    Firebase.goOnline();\n  }\n\n  _receive(event) {\n    Fireworker._firstMessageReceived = true;\n    this.lastTouched = Date.now();\n    for (let message of event.data) this._receiveMessage(message);\n  }\n\n  _receiveMessage(message) {\n    let promise;\n    try {\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      if (message.writeSerial) this._lastWriteSerial = message.writeSerial;\n      promise = Promise.resolve(fn.call(this, message));\n    } catch(e) {\n      promise = Promise.reject(e);\n    }\n    if (!message.oneWay) {\n      promise.then(result => {\n        this._send({msg: 'resolve', id: message.id, result: result});\n      }, error => {\n        this._send({msg: 'reject', id: message.id, error: errorToJson(error)});\n      });\n    }\n  }\n\n  _send(message) {\n    if (!this._messages.length) Promise.resolve().then(this._flushMessageQueue);\n    this._messages.push(message);\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._messages);\n    this._messages = [];\n  }\n\n  call({name, args}) {\n    try {\n      return Promise.resolve(Fireworker._exposed[name].apply(null, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  authWithCustomToken({url, authToken, options}) {\n    return createRef(url).authWithCustomToken(authToken, options);\n  }\n\n  unauth({url}) {\n    return createRef(url).unauth();\n  }\n\n  onAuth({url, callbackId}) {\n    const authCallback = this._callbacks[callbackId] = this._onAuthCallback.bind(this, callbackId);\n    authCallback.cancel = this._offAuth.bind(this, url, authCallback);\n    createRef(url).onAuth(authCallback);\n  }\n\n  _offAuth(url, authCallback) {\n    createRef(url).offAuth(authCallback);\n  }\n\n  _onAuthCallback(callbackId, auth) {\n    this._send({msg: 'callback', id: callbackId, args: [auth]});\n  }\n\n  set({url, value}) {\n    return createRef(url).set(value);\n  }\n\n  update({url, value}) {\n    return createRef(url).update(value);\n  }\n\n  on({listenerKey, url, spec, eventType, callbackId, options}) {\n    options = options || {};\n    if (options.sync) options.branch = new Branch();\n    const snapshotCallback = this._callbacks[callbackId] =\n      this._onSnapshotCallback.bind(this, callbackId, options);\n    snapshotCallback.listenerKey = listenerKey;\n    snapshotCallback.eventType = eventType;\n    snapshotCallback.cancel = this.off.bind(this, {listenerKey, url, spec, eventType, callbackId});\n    const cancelCallback = this._onCancelCallback.bind(this, callbackId);\n    createRef(url, spec).on(eventType, snapshotCallback, cancelCallback);\n  }\n\n  off({listenerKey, url, spec, eventType, callbackId}) {\n    let snapshotCallback;\n    if (callbackId) {\n      // Callback IDs will not be reused across on() calls, so it's safe to just delete it.\n      snapshotCallback = this._callbacks[callbackId];\n      delete this._callbacks[callbackId];\n    } else {\n      for (let key of Object.keys(this._callbacks)) {\n        if (!this._callbacks.hasOwnProperty(key)) continue;\n        const callback = this._callbacks[key];\n        if (callback.listenerKey === listenerKey &&\n            (!eventType || callback.eventType === eventType)) {\n          delete this._callbacks[key];\n        }\n      }\n    }\n    createRef(url, spec).off(eventType, snapshotCallback);\n  }\n\n  _onSnapshotCallback(callbackId, options, snapshot) {\n    if (options.sync && options.rest) {\n      const path = decodeURIComponent(\n        snapshot.ref().toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n      let value;\n      try {\n        value = normalizeFirebaseValue(snapshot.val());\n      } catch (e) {\n        options.branch.set(null);\n        this._send({\n          msg: 'callback', id: callbackId,\n          args: [null, {\n            path, exists: snapshot.exists(), valueError: errorToJson(e),\n            writeSerial: this._lastWriteSerial\n          }]\n        });\n        return;\n      }\n      const updates = options.branch.diff(value, path);\n      for (let childPath in updates) {\n        if (!updates.hasOwnProperty(childPath)) continue;\n        this._send({\n          msg: 'callback', id: callbackId,\n          args: [null, {\n            path: childPath, value: updates[childPath], writeSerial: this._lastWriteSerial\n          }]\n        });\n      }\n    } else {\n      const snapshotJson = this._snapshotToJson(snapshot);\n      if (options.sync) options.branch.set(snapshotJson.value);\n      this._send({msg: 'callback', id: callbackId, args: [null, snapshotJson]});\n      options.rest = true;\n    }\n  }\n\n  _onCancelCallback(callbackId, error) {\n    delete this._callbacks[callbackId];\n    this._send({msg: 'callback', id: callbackId, args: [errorToJson(error)]});\n  }\n\n  transaction({url, oldValue, relativeUpdates}) {\n    const ref = createRef(url);\n    let stale, currentValue;\n\n    return ref.transaction(value => {\n      currentValue = value = normalizeFirebaseValue(value);\n      stale = !areEqualNormalFirebaseValues(value, oldValue);\n      if (stale) return;\n      if (relativeUpdates) {\n        for (let relativePath in relativeUpdates) {\n          if (!relativeUpdates.hasOwnProperty(relativePath)) continue;\n          if (relativePath) {\n            const segments = relativePath.split('/');\n            if (value === undefined || value === null) value = {};\n            let object = value;\n            for (let i = 0; i < segments.length - 1; i++) {\n              const key = segments[i];\n              let child = object[key];\n              if (child === undefined || child === null) child = object[key] = {};\n              object = child;\n            }\n            object[segments[segments.length - 1]] = relativeUpdates[relativePath];\n          } else {\n            value = relativeUpdates[relativePath];\n          }\n        }\n      }\n      return value;\n    }).then(result => {\n      return {committed: !stale, snapshot: this._snapshotToJson(result.snapshot)};\n    }, error => {\n      if (error.message === 'set' || error.message === 'disconnect') return false;\n      return Promise.reject(error);\n    });\n  }\n\n  _snapshotToJson(snapshot) {\n    const path =\n      decodeURIComponent(snapshot.ref().toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    try {\n      return {\n        path, value: normalizeFirebaseValue(snapshot.val()), writeSerial: this._lastWriteSerial\n      };\n    } catch (e) {\n      return {\n        path, exists: snapshot.exists(), valueError: errorToJson(e),\n        writeSerial: this._lastWriteSerial\n      };\n    }\n  }\n\n  onDisconnect({url, method, value}) {\n    const onDisconnect = createRef(url).onDisconnect();\n    return onDisconnect[method].call(onDisconnect, value);\n  }\n\n  simulate({token, method, url, args}) {\n    interceptConsoleLog();\n    let simulatedFirebase;\n    return (simulationQueue = simulationQueue.catch(() => {}).then(() => {\n      simulationConsoleLogs = [];\n      simulatedFirebase = createRef(url, null, 'permission_denied_simulator');\n      simulatedFirebase.unauth();\n      return simulatedFirebase.authWithCustomToken(token, function() {}, {remember: 'none'});\n    }).then(() => {\n      return simulatedFirebase[method].apply(simulatedFirebase, args);\n    }).then(() => {\n      return null;\n    }, e => {\n      const code = e.code || e.message;\n      if (code && code.toLowerCase() === 'permission_denied') {\n        return simulationConsoleLogs.join('\\n');\n      } else {\n        return 'Got a different error in simulation: ' + e;\n      }\n    }));\n  }\n\n  static expose(fn, name) {\n    name = name || fn.name;\n    if (!name) throw new Error('Cannot expose a function with no name: ' + fn);\n    if (Fireworker._exposed.hasOwnProperty(name)) {\n      throw new Error(`Function ${name}() already exposed`);\n    }\n    if (Fireworker._firstMessageReceived) {\n      throw new Error('Too late to expose function, worker in use');\n    }\n    Fireworker._exposed[name] = fn;\n  }\n}\n\nFireworker._exposed = {};\nFireworker._firstMessageReceived = false;\n\n\nfunction interceptConsoleLog() {\n  if (consoleIntercepted) return;\n  const originalLog = console.log;\n  let lastTestIndex;\n  console.log = function() {\n    let message = Array.prototype.join.call(arguments, ' ');\n    if (!/^(FIREBASE: \\n?)+/.test(message)) return originalLog.apply(console, arguments);\n    message = message\n      .replace(/^(FIREBASE: \\n?)+/, '')\n      .replace(/^\\s+([^.]*):(?:\\.(read|write|validate):)?.*/g, function(match, g1, g2) {\n        g2 = g2 || 'read';\n        return ' ' + g2 + ' ' + g1;\n      });\n    if (/^\\s+/.test(message)) {\n      const match = message.match(/^\\s+=> (true|false)/);\n      if (match) {\n        simulationConsoleLogs[lastTestIndex] =\n          (match[1] === 'true' ? ' \\u2713' : ' \\u2717') + simulationConsoleLogs[lastTestIndex];\n        lastTestIndex = undefined;\n      } else {\n        if (lastTestIndex === simulationConsoleLogs.length - 1) simulationConsoleLogs.pop();\n        simulationConsoleLogs.push(message);\n        lastTestIndex = simulationConsoleLogs.length - 1;\n      }\n    } else if (/^\\d+:\\d+: /.test(message)) {\n      simulationConsoleLogs.push('   ' + message);\n    } else {\n      if (lastTestIndex === simulationConsoleLogs.length - 1) simulationConsoleLogs.pop();\n      simulationConsoleLogs.push(message);\n      lastTestIndex = undefined;\n    }\n  };\n  consoleIntercepted = true;\n}\n\nfunction errorToJson(error) {\n  const json = {name: error.name};\n  const propertyNames = Object.getOwnPropertyNames(error);\n  for (let propertyName of propertyNames) {\n    json[propertyName] = error[propertyName];\n  }\n  return json;\n}\n\nfunction createRef(url, spec, context) {\n  try {\n    let ref = new Firebase(url, context);\n    if (spec) {\n      switch (spec.by) {\n        case '$key': ref = ref.orderByKey(); break;\n        case '$value': ref = ref.orderByValue(); break;\n        default: ref = ref.orderByChild(spec.by); break;\n      }\n      if (spec.at) ref = ref.equalTo(spec.at);\n      else if (spec.from) ref = ref.startAt(spec.from);\n      else if (spec.to) ref = ref.endAt(spec.to);\n      if (spec.first) ref = ref.limitToFirst(spec.first);\n      else if (spec.last) ref = ref.limitToLast(spec.last);\n    }\n    return ref;\n  } catch (e) {\n    e.extra = {url, spec, context};\n    throw e;\n  }\n}\n\nfunction normalizeFirebaseValue(value) {\n  if (Array.isArray(value)) {\n    const normalValue = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      if (item === undefined || item === null) continue;\n      normalValue[i] = normalizeFirebaseValue(item);\n    }\n    return normalValue;\n  }\n  if (value instanceof Object) {\n    for (let key in value) {\n      if (value.hasOwnProperty(key)) value[key] = normalizeFirebaseValue(value[key]);\n    }\n  }\n  return value;\n}\n\n\nfunction areEqualNormalFirebaseValues(a, b) {\n  if (a === b) return true;\n  if ((a === null || a === undefined) && (b === null || b === undefined)) return true;\n  if (a === null || b === null) return false;\n  if (!(typeof a === 'object' && typeof b === 'object')) return false;\n  for (let key in a) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n    if (!areEqualNormalFirebaseValues(a[key], b[key])) return false;\n  }\n  for (let key in b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n  }\n  return true;\n}\n\nfunction acceptConnections() {\n  if (typeof onconnect !== 'undefined') {\n    self.onconnect = function(event) {\n      fireworkers.push(new Fireworker(event.ports[0]));\n    };\n  } else {\n    fireworkers.push(new Fireworker(self));\n  }\n  self.localStorage.flushPending();\n}\n\nconst CONNECTION_CHECK_INTERVAL = 60 * 1000;\nlet lastConnectionCheck = Date.now();\nsetInterval(function findAbandonedConnections() {\n  const now = Date.now(), gap = now - lastConnectionCheck - CONNECTION_CHECK_INTERVAL;\n  lastConnectionCheck = now;\n  fireworkers.forEach(worker => {\n    if (!worker) return;\n    if (gap >= 1000 && worker.lastTouched <= now - gap) worker.lastTouched += gap;\n    if (now - worker.lastTouched >= 3 * CONNECTION_CHECK_INTERVAL) worker.destroy();\n  });\n  let k;\n  while ((k = fireworkers.indexOf(null)) >= 0) fireworkers.splice(k, 1);\n}, CONNECTION_CHECK_INTERVAL);\n\nself.window = self;\nacceptConnections();\n"]}