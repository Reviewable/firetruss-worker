{"version":3,"sources":["../src/worker.js"],"names":["errorToJson","error","json","name","propertyNames","Object","getOwnPropertyNames","i","list","length","const","propertyName","normalizeFirebaseValue","value","Array","isArray","let","normalValue","item","undefined","key","hasOwnProperty","areEqualNormalFirebaseValues","a","b","acceptConnections","onconnect","self","event","fireworkers","push","Fireworker","ports","localStorage","flushPending","apps","LocalStorage","this","_items","_pendingItems","_initialized","_flushPending","bind","prototype","init","items","_update","Promise","resolve","then","setTimeout","_send","msg","prototypeAccessors","get","n","getItem","setItem","targetItem","removeItem","this$1","splice","clear","Branch","_root","set","diff","pathPrefix","updates","segments","split","_diffRecursively","oldValue","newValue","replace","keysToReplace","childKey","replaceChild","concat","join","port","ping","_port","_lastWriteSerial","_callbacks","_messages","_flushMessageQueue","onmessage","_receive","ref","storage","config","databaseURL","firebase","initializeApp","_app","database","auth","exposedFunctionNames","keys","_exposed","version","firebaseSdkVersion","SDK_VERSION","destroy","callback","cancel","k","indexOf","lastTouched","Date","now","bounceConnection","Error","goOffline","goOnline","_firstMessageReceived","data","message","_receiveMessage","promise","fn","writeSerial","Math","max","call","e","immediateFailure","reject","oneWay","result","id","postMessage","args","apply","authWithCustomToken","authToken","url","signInWithCustomToken","user","toJSON","unauth","signOut","onAuth","callbackId","authCallback","_onAuthCallback","onAuthStateChanged","_createRef","update","once","snapshot","_snapshotToJson","on","listenerKey","spec","eventType","options","sync","branch","off","snapshotCallback","_onSnapshotCallback","cancelCallback","_onCancelCallback","rest","path","decodeURIComponent","toString","val","childPath","snapshotJson","transaction","ref$1","stale","committedValue","relativeUpdates","transactionPath","relativePath","object","child","snapshots","committed","onDisconnect","method","refFromURL","by","orderByKey","orderByValue","orderByChild","at","equalTo","from","startAt","to","endAt","first","limitToFirst","last","limitToLast","extra","expose","lastConnectionCheck","setInterval","gap","forEach","worker","window"],"mappings":"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","file":"worker.umd.min.js","sourcesContent":["/* globals firebase, setTimeout, setInterval */\n\nconst fireworkers = [];\nconst apps = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = '0.8.2';\n\n\nclass LocalStorage {\n  constructor() {\n    this._items = [];\n    this._pendingItems = [];\n    this._initialized = false;\n    this._flushPending = this.flushPending.bind(this);\n  }\n\n  init(items) {\n    if (!this._initialized) {\n      this._items = items;\n      this._initialized = true;\n    }\n  }\n\n  _update(item) {\n    if (!this._pendingItems.length) Promise.resolve().then(this._flushPending);\n    this._pendingItems.push(item);\n  }\n\n  flushPending() {\n    if (!this._pendingItems.length) return;\n    if (!fireworkers.length) {\n      setTimeout(this._flushPending, 200);\n      return;\n    }\n    fireworkers[0]._send({msg: 'updateLocalStorage', items: this._pendingItems});\n    this._pendingItems = [];\n  }\n\n  get length() {return this._items.length;}\n\n  key(n) {\n    return this._items[n].key;\n  }\n\n  getItem(key) {\n    for (const item of this._items) {\n      if (item.key === key) return item.value;\n    }\n    return null;\n  }\n\n  setItem(key, value) {\n    let targetItem;\n    for (const item of this._items) {\n      if (item.key === key) {\n        targetItem = item;\n        item.value = value;\n        break;\n      }\n    }\n    if (!targetItem) {\n      targetItem = {key, value};\n      this._items.push(targetItem);\n    }\n    this._update(targetItem);\n  }\n\n  removeItem(key) {\n    for (let i = 0; i < this._items.length; i++) {\n      if (this._items[i].key === key) {\n        this._items.splice(i, 1);\n        this._update({key, value: null});\n        break;\n      }\n    }\n  }\n\n  clear() {\n    for (const item in this._items) {\n      this._update({key: item.key, value: null});\n    }\n    this._items = [];\n  }\n}\n\nself.localStorage = new LocalStorage();\n\n\nclass Branch {\n  constructor() {\n    this._root = null;\n  }\n\n  set(value) {\n    this._root = value;\n  }\n\n  diff(value, pathPrefix) {\n    const updates = {};\n    const segments = pathPrefix === '/' ? [''] : pathPrefix.split('/');\n    if (this._diffRecursively(this._root, value, segments, updates)) {\n      this._root = value;\n      updates[pathPrefix] = value;\n    }\n    return updates;\n  }\n\n  _diffRecursively(oldValue, newValue, segments, updates) {\n    if (oldValue === undefined) oldValue = null;\n    if (newValue === undefined) newValue = null;\n    if (oldValue === null) return newValue !== null;\n    if (oldValue instanceof Object && newValue instanceof Object) {\n      let replace = true;\n      const keysToReplace = [];\n      for (const childKey in newValue) {\n        if (!newValue.hasOwnProperty(childKey)) continue;\n        const replaceChild = this._diffRecursively(\n          oldValue[childKey], newValue[childKey], segments.concat(childKey), updates);\n        if (replaceChild) {\n          keysToReplace.push(childKey);\n        } else {\n          replace = false;\n        }\n      }\n      if (replace) return true;\n      for (const childKey in oldValue) {\n        if (!oldValue.hasOwnProperty(childKey) || newValue.hasOwnProperty(childKey)) continue;\n        updates[segments.concat(childKey).join('/')] = null;\n        delete oldValue[childKey];\n      }\n      for (const childKey of keysToReplace) {\n        updates[segments.concat(childKey).join('/')] = newValue[childKey];\n        oldValue[childKey] = newValue[childKey];\n      }\n    } else {\n      return newValue !== oldValue;\n    }\n  }\n}\n\n\nexport default class Fireworker {\n  constructor(port) {\n    this.ping();\n    this._port = port;\n    this._lastWriteSerial = 0;\n    this._callbacks = {};\n    this._messages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    port.onmessage = this._receive.bind(this);\n  }\n\n  init({storage, config}) {\n    if (storage) self.localStorage.init(storage);\n    if (config) {\n      if (!apps[config.databaseURL]) {\n        apps[config.databaseURL] = firebase.initializeApp(config, config.databaseURL);\n      }\n      this._app = apps[config.databaseURL];\n      this._app.database();\n      this._app.auth();\n    }\n    return {\n      exposedFunctionNames: Object.keys(Fireworker._exposed),\n      version: VERSION,\n      firebaseSdkVersion: firebase.SDK_VERSION\n    };\n  }\n\n  destroy() {\n    for (const key in this._callbacks) {\n      const callback = this._callbacks[key];\n      if (callback.cancel) callback.cancel();\n    }\n    this._callbacks = {};\n    this._port.onmessage = null;\n    this._messages = [];\n    const k = fireworkers.indexOf(this);\n    if (k >= 0) fireworkers[k] = null;\n  }\n\n  ping() {\n    this.lastTouched = Date.now();\n  }\n\n  bounceConnection() {\n    if (!this._app) throw new Error('Must provide Firebase configuration data first');\n    this._app.database().goOffline();\n    this._app.database().goOnline();\n  }\n\n  _receive(event) {\n    Fireworker._firstMessageReceived = true;\n    this.lastTouched = Date.now();\n    for (const message of event.data) this._receiveMessage(message);\n  }\n\n  _receiveMessage(message) {\n    let promise;\n    try {\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      if (message.writeSerial) {\n        this._lastWriteSerial = Math.max(this._lastWriteSerial, message.writeSerial);\n      }\n      promise = Promise.resolve(fn.call(this, message));\n    } catch (e) {\n      e.immediateFailure = true;\n      promise = Promise.reject(e);\n    }\n    if (!message.oneWay) {\n      promise.then(result => {\n        this._send({msg: 'resolve', id: message.id, result});\n      }, error => {\n        this._send({msg: 'reject', id: message.id, error: errorToJson(error)});\n      });\n    }\n  }\n\n  _send(message) {\n    if (!this._messages.length) Promise.resolve().then(this._flushMessageQueue);\n    this._messages.push(message);\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._messages);\n    this._messages = [];\n  }\n\n  call({name, args}) {\n    try {\n      return Promise.resolve(Fireworker._exposed[name].apply(null, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  authWithCustomToken({url, authToken}) {\n    return this._app.auth().signInWithCustomToken(authToken)\n      .then(result => result.user && result.user.toJSON());\n  }\n\n  unauth({url}) {\n    return this._app.auth().signOut();\n  }\n\n  onAuth({url, callbackId}) {\n    const authCallback = this._callbacks[callbackId] = this._onAuthCallback.bind(this, callbackId);\n    authCallback.cancel = this._app.auth().onAuthStateChanged(authCallback);\n  }\n\n  _onAuthCallback(callbackId, auth) {\n    this._send({msg: 'callback', id: callbackId, args: [auth && auth.toJSON()]});\n  }\n\n  set({url, value}) {\n    return this._createRef(url).set(value);\n  }\n\n  update({url, value}) {\n    return this._createRef(url).update(value);\n  }\n\n  once({url}) {\n    return this._createRef(url).once('value').then(snapshot => this._snapshotToJson(snapshot));\n  }\n\n  on({listenerKey, url, spec, eventType, callbackId, options}) {\n    options = options || {};\n    if (options.sync) options.branch = new Branch();\n    options.cancel = this.off.bind(this, {listenerKey, url, spec, eventType, callbackId});\n    const snapshotCallback = this._callbacks[callbackId] =\n      this._onSnapshotCallback.bind(this, callbackId, options);\n    snapshotCallback.listenerKey = listenerKey;\n    snapshotCallback.eventType = eventType;\n    snapshotCallback.cancel = options.cancel;\n    const cancelCallback = this._onCancelCallback.bind(this, callbackId);\n    this._createRef(url, spec).on(eventType, snapshotCallback, cancelCallback);\n  }\n\n  off({listenerKey, url, spec, eventType, callbackId}) {\n    let snapshotCallback;\n    if (callbackId) {\n      // Callback IDs will not be reused across on() calls, so it's safe to just delete it.\n      snapshotCallback = this._callbacks[callbackId];\n      delete this._callbacks[callbackId];\n    } else {\n      for (const key of Object.keys(this._callbacks)) {\n        if (!this._callbacks.hasOwnProperty(key)) continue;\n        const callback = this._callbacks[key];\n        if (callback.listenerKey === listenerKey &&\n            (!eventType || callback.eventType === eventType)) {\n          delete this._callbacks[key];\n        }\n      }\n    }\n    this._createRef(url, spec).off(eventType, snapshotCallback);\n  }\n\n  _onSnapshotCallback(callbackId, options, snapshot) {\n    if (options.sync && options.rest) {\n      const path = decodeURIComponent(\n        snapshot.ref.toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n      let value;\n      try {\n        value = normalizeFirebaseValue(snapshot.val());\n      } catch (e) {\n        options.cancel();\n        this._onCancelCallback(callbackId, e);\n        return;\n      }\n      const updates = options.branch.diff(value, path);\n      for (const childPath in updates) {\n        if (!updates.hasOwnProperty(childPath)) continue;\n        this._send({\n          msg: 'callback', id: callbackId,\n          args: [null, {\n            path: childPath, value: updates[childPath], writeSerial: this._lastWriteSerial\n          }]\n        });\n      }\n    } else {\n      try {\n        const snapshotJson = this._snapshotToJson(snapshot);\n        if (options.sync) options.branch.set(snapshotJson.value);\n        this._send({msg: 'callback', id: callbackId, args: [null, snapshotJson]});\n        options.rest = true;\n      } catch (e) {\n        options.cancel();\n        this._onCancelCallback(callbackId, e);\n      }\n    }\n  }\n\n  _onCancelCallback(callbackId, error) {\n    delete this._callbacks[callbackId];\n    this._send({msg: 'callback', id: callbackId, args: [errorToJson(error)]});\n  }\n\n  transaction({url, oldValue, relativeUpdates}) {\n    const transactionPath = decodeURIComponent(url.replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    const ref = this._createRef(url);\n    const branch = new Branch();\n    let stale, committedValue;\n\n    return ref.transaction(value => {\n      committedValue = undefined;\n      value = normalizeFirebaseValue(value);\n      stale = !areEqualNormalFirebaseValues(value, oldValue);\n      if (stale) value = oldValue;\n      if (relativeUpdates) {\n        for (const relativePath in relativeUpdates) {\n          if (!relativeUpdates.hasOwnProperty(relativePath)) continue;\n          if (relativePath) {\n            const segments = relativePath.split('/');\n            if (value === undefined || value === null) value = {};\n            let object = value;\n            for (let i = 0; i < segments.length - 1; i++) {\n              const key = segments[i];\n              let child = object[key];\n              if (child === undefined || child === null) child = object[key] = {};\n              object = child;\n            }\n            object[segments[segments.length - 1]] = relativeUpdates[relativePath];\n          } else {\n            value = relativeUpdates[relativePath];\n          }\n        }\n      }\n      branch.set(value);\n      if (!stale) {\n        committedValue = value;\n        return value;\n      }\n    }).then(result => {\n      const snapshots = [];\n      const updates = branch.diff(normalizeFirebaseValue(result.snapshot.val()), transactionPath);\n      for (const path in updates) {\n        if (!updates.hasOwnProperty(path)) continue;\n        snapshots.push({\n          path, value: updates[path], writeSerial: result.writeSerial || this._lastWriteSerial\n        });\n      }\n      return {committed: !stale, snapshots};\n    }, error => {\n      if (error.message === 'set' || error.message === 'disconnect') {\n        return ref.once('value').then(snapshot => {\n          return {committed: false, snapshots: [snapshot], writeSerial: this._lastWriteSerial};\n        });\n      }\n      error.committedValue = committedValue;\n      return Promise.reject(error);\n    });\n  }\n\n  _snapshotToJson(snapshot) {\n    const path =\n      decodeURIComponent(snapshot.ref.toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    return {\n      path, value: normalizeFirebaseValue(snapshot.val()), writeSerial: this._lastWriteSerial\n    };\n  }\n\n  onDisconnect({url, method, value}) {\n    const onDisconnect = this._createRef(url).onDisconnect();\n    return onDisconnect[method](value);\n  }\n\n  _createRef(url, spec) {\n    if (!this._app) throw new Error('Must provide Firebase configuration data first');\n    try {\n      let ref = this._app.database().refFromURL(url);\n      if (spec) {\n        switch (spec.by) {\n          case '$key': ref = ref.orderByKey(); break;\n          case '$value': ref = ref.orderByValue(); break;\n          default: ref = ref.orderByChild(spec.by); break;\n        }\n        if (spec.at) ref = ref.equalTo(spec.at);\n        else if (spec.from) ref = ref.startAt(spec.from);\n        else if (spec.to) ref = ref.endAt(spec.to);\n        if (spec.first) ref = ref.limitToFirst(spec.first);\n        else if (spec.last) ref = ref.limitToLast(spec.last);\n      }\n      return ref;\n    } catch (e) {\n      e.extra = {url, spec};\n      throw e;\n    }\n  }\n\n  static expose(fn, name) {\n    name = name || fn.name;\n    if (!name) throw new Error('Cannot expose a function with no name: ' + fn);\n    if (Fireworker._exposed.hasOwnProperty(name)) {\n      throw new Error(`Function ${name}() already exposed`);\n    }\n    if (Fireworker._firstMessageReceived) {\n      throw new Error('Too late to expose function, worker in use');\n    }\n    Fireworker._exposed[name] = fn;\n  }\n}\n\nFireworker._exposed = {};\nFireworker._firstMessageReceived = false;\n\nfunction errorToJson(error) {\n  const json = {name: error.name};\n  const propertyNames = Object.getOwnPropertyNames(error);\n  for (const propertyName of propertyNames) {\n    json[propertyName] = error[propertyName];\n  }\n  return json;\n}\n\nfunction normalizeFirebaseValue(value) {\n  if (Array.isArray(value)) {\n    const normalValue = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      if (item === undefined || item === null) continue;\n      normalValue[i] = normalizeFirebaseValue(item);\n    }\n    return normalValue;\n  }\n  if (value instanceof Object) {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) value[key] = normalizeFirebaseValue(value[key]);\n    }\n  }\n  return value;\n}\n\n\nfunction areEqualNormalFirebaseValues(a, b) {\n  if (a === b) return true;\n  if ((a === null || a === undefined) && (b === null || b === undefined)) return true;\n  if (a === null || b === null) return false;\n  if (!(typeof a === 'object' && typeof b === 'object')) return false;\n  for (const key in a) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n    if (!areEqualNormalFirebaseValues(a[key], b[key])) return false;\n  }\n  for (const key in b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n  }\n  return true;\n}\n\nfunction acceptConnections() {\n  if (typeof onconnect !== 'undefined') {\n    self.onconnect = function(event) {\n      fireworkers.push(new Fireworker(event.ports[0]));\n    };\n  } else {\n    fireworkers.push(new Fireworker(self));\n  }\n  self.localStorage.flushPending();\n}\n\nconst CONNECTION_CHECK_INTERVAL = 60 * 1000;\nlet lastConnectionCheck = Date.now();\nsetInterval(function findAbandonedConnections() {\n  const now = Date.now(), gap = now - lastConnectionCheck - CONNECTION_CHECK_INTERVAL;\n  lastConnectionCheck = now;\n  fireworkers.forEach(worker => {\n    if (!worker) return;\n    if (gap >= 1000 && worker.lastTouched <= now - gap) worker.lastTouched += gap;\n    if (now - worker.lastTouched >= 3 * CONNECTION_CHECK_INTERVAL) worker.destroy();\n  });\n  let k;\n  while ((k = fireworkers.indexOf(null)) >= 0) fireworkers.splice(k, 1);\n}, CONNECTION_CHECK_INTERVAL);\n\nself.window = self;\nacceptConnections();\n"]}