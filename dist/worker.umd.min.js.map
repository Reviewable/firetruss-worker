{"version":3,"sources":["../src/worker.js"],"names":["errorToJson","error","json","name","message","propertyNames","Object","getOwnPropertyNames","i","list","length","const","propertyName","normalizeFirebaseValue","value","Array","isArray","let","normalValue","item","undefined","key","hasOwnProperty","userToJson","user","Promise","resolve","toJSON","stsTokenManager","getIdTokenResult","then","result","token","idToken","areEqualNormalFirebaseValues","a","b","acceptConnections","onconnect","self","event","fireworkers","push","Fireworker","ports","localStorage","flushPending","apps","LocalStorage","this","_items","_pendingItems","_initialized","_flushPending","bind","prototype","init","items","_update","setTimeout","_send","msg","prototypeAccessors","get","n","getItem","setItem","targetItem","removeItem","this$1","splice","clear","Branch","_root","set","diff","pathPrefix","updates","segments","split","_diffRecursively","oldValue","newValue","replace","keysToReplace","childKey","replaceChild","concat","join","port","_port","_lastWriteSerial","_configError","_callbacks","_messages","_flushMessageQueue","onmessage","_receive","ref","storage","config","databaseURL","firebase","initializeApp","_app","database","auth","e","exposedFunctionNames","keys","_exposed","version","firebaseSdkVersion","SDK_VERSION","destroy","callback","cancel","k","indexOf","ping","bounceConnection","Error","goOffline","goOnline","_firstMessageReceived","data","_receiveMessage","promise","fn","writeSerial","Math","max","call","immediateFailure","reject","oneWay","id","postMessage","args","apply","authWithCustomToken","authToken","url","signInWithCustomToken","unauth","signOut","catch","currentUser","callbackId","onAuth","authCallback","_onAuthCallback","onAuthStateChanged","jsonUser","_createRef","update","once","snapshot","_snapshotToJson","on","listenerKey","spec","eventType","options","sync","branch","off","snapshotCallback","_onSnapshotCallback","cancelCallback","_onCancelCallback","rest","path","decodeURIComponent","toString","val","childPath","snapshotJson","transaction","ref$1","stale","committedValue","relativeUpdates","transactionPath","relativePath","object","child","snapshots","committed","onDisconnect","method","refFromURL","by","orderByKey","orderByValue","orderByChild","at","equalTo","from","startAt","to","endAt","first","limitToFirst","last","limitToLast","extra","expose","window"],"mappings":"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","file":"worker.umd.min.js","sourcesContent":["/* globals firebase, setTimeout, setInterval */\n\nconst fireworkers = [];\nconst apps = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = '1.1.5';\n\n\nclass LocalStorage {\n  constructor() {\n    this._items = [];\n    this._pendingItems = [];\n    this._initialized = false;\n    this._flushPending = this.flushPending.bind(this);\n  }\n\n  init(items) {\n    if (!this._initialized) {\n      this._items = items;\n      this._initialized = true;\n    }\n  }\n\n  _update(item) {\n    if (!this._pendingItems.length) Promise.resolve().then(this._flushPending);\n    this._pendingItems.push(item);\n  }\n\n  flushPending() {\n    if (!this._pendingItems.length) return;\n    if (!fireworkers.length) {\n      setTimeout(this._flushPending, 200);\n      return;\n    }\n    fireworkers[0]._send({msg: 'updateLocalStorage', items: this._pendingItems});\n    this._pendingItems = [];\n  }\n\n  get length() {return this._items.length;}\n\n  key(n) {\n    return this._items[n].key;\n  }\n\n  getItem(key) {\n    for (const item of this._items) {\n      if (item.key === key) return item.value;\n    }\n    return null;\n  }\n\n  setItem(key, value) {\n    let targetItem;\n    for (const item of this._items) {\n      if (item.key === key) {\n        targetItem = item;\n        item.value = value;\n        break;\n      }\n    }\n    if (!targetItem) {\n      targetItem = {key, value};\n      this._items.push(targetItem);\n    }\n    this._update(targetItem);\n  }\n\n  removeItem(key) {\n    for (let i = 0; i < this._items.length; i++) {\n      if (this._items[i].key === key) {\n        this._items.splice(i, 1);\n        this._update({key, value: null});\n        break;\n      }\n    }\n  }\n\n  clear() {\n    for (const item in this._items) {\n      this._update({key: item.key, value: null});\n    }\n    this._items = [];\n  }\n}\n\nself.localStorage = new LocalStorage();\n\n\nclass Branch {\n  constructor() {\n    this._root = null;\n  }\n\n  set(value) {\n    this._root = value;\n  }\n\n  diff(value, pathPrefix) {\n    const updates = {};\n    const segments = pathPrefix === '/' ? [''] : pathPrefix.split('/');\n    if (this._diffRecursively(this._root, value, segments, updates)) {\n      this._root = value;\n      updates[pathPrefix] = value;\n    }\n    return updates;\n  }\n\n  _diffRecursively(oldValue, newValue, segments, updates) {\n    if (oldValue === undefined) oldValue = null;\n    if (newValue === undefined) newValue = null;\n    if (oldValue === null) return newValue !== null;\n    if (oldValue instanceof Object && newValue instanceof Object) {\n      let replace = true;\n      const keysToReplace = [];\n      for (const childKey in newValue) {\n        if (!newValue.hasOwnProperty(childKey)) continue;\n        const replaceChild = this._diffRecursively(\n          oldValue[childKey], newValue[childKey], segments.concat(childKey), updates);\n        if (replaceChild) {\n          keysToReplace.push(childKey);\n        } else {\n          replace = false;\n        }\n      }\n      if (replace) return true;\n      for (const childKey in oldValue) {\n        if (!oldValue.hasOwnProperty(childKey) || newValue.hasOwnProperty(childKey)) continue;\n        updates[segments.concat(childKey).join('/')] = null;\n        delete oldValue[childKey];\n      }\n      for (const childKey of keysToReplace) {\n        updates[segments.concat(childKey).join('/')] = newValue[childKey];\n        oldValue[childKey] = newValue[childKey];\n      }\n    } else {\n      return newValue !== oldValue;\n    }\n  }\n}\n\n\nexport default class Fireworker {\n  constructor(port) {\n    this._port = port;\n    this._lastWriteSerial = 0;\n    this._configError = undefined;\n    this._callbacks = {};\n    this._messages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    port.onmessage = this._receive.bind(this);\n  }\n\n  init({storage, config}) {\n    if (storage) self.localStorage.init(storage);\n    if (config) {\n      try {\n        if (!apps[config.databaseURL]) {\n          apps[config.databaseURL] = firebase.initializeApp(config, config.databaseURL);\n        }\n        this._app = apps[config.databaseURL];\n        this._app.database();\n        this._app.auth();\n        this._configError = undefined;\n      } catch (e) {\n        this._configError = e;\n        throw e;\n      }\n    } else if (this._configError) {\n      throw this._configError;\n    }\n    return {\n      exposedFunctionNames: Object.keys(Fireworker._exposed),\n      version: VERSION,\n      firebaseSdkVersion: firebase.SDK_VERSION\n    };\n  }\n\n  destroy() {\n    for (const key in this._callbacks) {\n      const callback = this._callbacks[key];\n      if (callback.cancel) callback.cancel();\n    }\n    this._callbacks = {};\n    this._port.onmessage = null;\n    this._messages = [];\n    const k = fireworkers.indexOf(this);\n    if (k >= 0) fireworkers[k] = null;\n  }\n\n  ping() {\n    // Noop, placeholder for legacy Firetruss clients.\n  }\n\n  bounceConnection() {\n    if (!this._app) throw new Error('Must provide Firebase configuration data first');\n    this._app.database().goOffline();\n    this._app.database().goOnline();\n  }\n\n  _receive(event) {\n    Fireworker._firstMessageReceived = true;\n    for (const message of event.data) this._receiveMessage(message);\n  }\n\n  _receiveMessage(message) {\n    let promise;\n    try {\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      if (message.writeSerial) {\n        this._lastWriteSerial = Math.max(this._lastWriteSerial, message.writeSerial);\n      }\n      promise = Promise.resolve(fn.call(this, message));\n    } catch (e) {\n      e.immediateFailure = true;\n      promise = Promise.reject(e);\n    }\n    if (!message.oneWay) {\n      promise.then(result => {\n        this._send({msg: 'resolve', id: message.id, result});\n      }, error => {\n        this._send({msg: 'reject', id: message.id, error: errorToJson(error)});\n      });\n    }\n  }\n\n  _send(message) {\n    if (!this._messages.length) Promise.resolve().then(this._flushMessageQueue);\n    this._messages.push(message);\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._messages);\n    this._messages = [];\n  }\n\n  call({name, args}) {\n    try {\n      return Promise.resolve(Fireworker._exposed[name].apply(null, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  authWithCustomToken({url, authToken}) {\n    return this._app.auth().signInWithCustomToken(authToken)\n      .then(result => userToJson(result.user));\n  }\n\n  unauth({url}) {\n    return this._app.auth().signOut().catch(e => {\n      // We can ignore the error if the user is signed out anyway, but make sure to notify all\n      // authCallbacks otherwise we end up in a bogus state!\n      if (this._app.auth().currentUser === null) {\n        for (const callbackId in this._callbacks) {\n          if (!this._callbacks.hasOwnProperty(callbackId)) continue;\n          const callback = this._callbacks[callbackId];\n          if (callback.auth) callback(null);\n        }\n      } else {\n        return Promise.reject(e);\n      }\n    });\n  }\n\n  onAuth({url, callbackId}) {\n    const authCallback = this._callbacks[callbackId] = this._onAuthCallback.bind(this, callbackId);\n    authCallback.auth = true;\n    authCallback.cancel = this._app.auth().onAuthStateChanged(authCallback);\n  }\n\n  _onAuthCallback(callbackId, user) {\n    userToJson(user).then(jsonUser => {\n      this._send({msg: 'callback', id: callbackId, args: [jsonUser]});\n    });\n  }\n\n  set({url, value}) {\n    return this._createRef(url).set(value);\n  }\n\n  update({url, value}) {\n    return this._createRef(url).update(value);\n  }\n\n  once({url}) {\n    return this._createRef(url).once('value').then(snapshot => this._snapshotToJson(snapshot));\n  }\n\n  on({listenerKey, url, spec, eventType, callbackId, options}) {\n    options = options || {};\n    if (options.sync) options.branch = new Branch();\n    options.cancel = this.off.bind(this, {listenerKey, url, spec, eventType, callbackId});\n    const snapshotCallback = this._callbacks[callbackId] =\n      this._onSnapshotCallback.bind(this, callbackId, options);\n    snapshotCallback.listenerKey = listenerKey;\n    snapshotCallback.eventType = eventType;\n    snapshotCallback.cancel = options.cancel;\n    const cancelCallback = this._onCancelCallback.bind(this, callbackId);\n    this._createRef(url, spec).on(eventType, snapshotCallback, cancelCallback);\n  }\n\n  off({listenerKey, url, spec, eventType, callbackId}) {\n    let snapshotCallback;\n    if (callbackId) {\n      // Callback IDs will not be reused across on() calls, so it's safe to just delete it.\n      snapshotCallback = this._callbacks[callbackId];\n      delete this._callbacks[callbackId];\n    } else {\n      for (const key of Object.keys(this._callbacks)) {\n        if (!this._callbacks.hasOwnProperty(key)) continue;\n        const callback = this._callbacks[key];\n        if (callback.listenerKey === listenerKey &&\n            (!eventType || callback.eventType === eventType)) {\n          delete this._callbacks[key];\n        }\n      }\n    }\n    this._createRef(url, spec).off(eventType, snapshotCallback);\n  }\n\n  _onSnapshotCallback(callbackId, options, snapshot) {\n    if (options.sync && options.rest) {\n      const path = decodeURIComponent(\n        snapshot.ref.toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n      let value;\n      try {\n        value = normalizeFirebaseValue(snapshot.val());\n      } catch (e) {\n        options.cancel();\n        this._onCancelCallback(callbackId, e);\n        return;\n      }\n      const updates = options.branch.diff(value, path);\n      for (const childPath in updates) {\n        if (!updates.hasOwnProperty(childPath)) continue;\n        this._send({\n          msg: 'callback', id: callbackId,\n          args: [null, {\n            path: childPath, value: updates[childPath], writeSerial: this._lastWriteSerial\n          }]\n        });\n      }\n    } else {\n      try {\n        const snapshotJson = this._snapshotToJson(snapshot);\n        if (options.sync) options.branch.set(snapshotJson.value);\n        this._send({msg: 'callback', id: callbackId, args: [null, snapshotJson]});\n        options.rest = true;\n      } catch (e) {\n        options.cancel();\n        this._onCancelCallback(callbackId, e);\n      }\n    }\n  }\n\n  _onCancelCallback(callbackId, error) {\n    delete this._callbacks[callbackId];\n    this._send({msg: 'callback', id: callbackId, args: [errorToJson(error)]});\n  }\n\n  transaction({url, oldValue, relativeUpdates}) {\n    const transactionPath = decodeURIComponent(url.replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    const ref = this._createRef(url);\n    const branch = new Branch();\n    let stale, committedValue;\n\n    return ref.transaction(value => {\n      committedValue = undefined;\n      value = normalizeFirebaseValue(value);\n      stale = !areEqualNormalFirebaseValues(value, oldValue);\n      if (stale) value = oldValue;\n      if (relativeUpdates) {\n        for (const relativePath in relativeUpdates) {\n          if (!relativeUpdates.hasOwnProperty(relativePath)) continue;\n          if (relativePath) {\n            const segments = relativePath.split('/');\n            if (value === undefined || value === null) value = {};\n            let object = value;\n            for (let i = 0; i < segments.length - 1; i++) {\n              const key = segments[i];\n              let child = object[key];\n              if (child === undefined || child === null) child = object[key] = {};\n              object = child;\n            }\n            object[segments[segments.length - 1]] = relativeUpdates[relativePath];\n          } else {\n            value = relativeUpdates[relativePath];\n          }\n        }\n      }\n      branch.set(value);\n      if (!stale) {\n        committedValue = value;\n        return value;\n      }\n    }).then(result => {\n      const snapshots = [];\n      const updates = branch.diff(normalizeFirebaseValue(result.snapshot.val()), transactionPath);\n      for (const path in updates) {\n        if (!updates.hasOwnProperty(path)) continue;\n        snapshots.push({\n          path, value: updates[path], writeSerial: result.writeSerial || this._lastWriteSerial\n        });\n      }\n      return {committed: !stale, snapshots};\n    }, error => {\n      if (error.message === 'set' || error.message === 'disconnect') {\n        return ref.once('value').then(snapshot => {\n          return {committed: false, snapshots: [snapshot], writeSerial: this._lastWriteSerial};\n        });\n      }\n      error.committedValue = committedValue;\n      return Promise.reject(error);\n    });\n  }\n\n  _snapshotToJson(snapshot) {\n    const path =\n      decodeURIComponent(snapshot.ref.toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    return {\n      path, value: normalizeFirebaseValue(snapshot.val()), writeSerial: this._lastWriteSerial\n    };\n  }\n\n  onDisconnect({url, method, value}) {\n    const onDisconnect = this._createRef(url).onDisconnect();\n    return onDisconnect[method](value);\n  }\n\n  _createRef(url, spec) {\n    if (!this._app) throw new Error('Must provide Firebase configuration data first');\n    try {\n      let ref = this._app.database().refFromURL(url);\n      if (spec) {\n        switch (spec.by) {\n          case '$key': ref = ref.orderByKey(); break;\n          case '$value': ref = ref.orderByValue(); break;\n          default: ref = ref.orderByChild(spec.by); break;\n        }\n        if (spec.at) ref = ref.equalTo(spec.at);\n        else if (spec.from) ref = ref.startAt(spec.from);\n        else if (spec.to) ref = ref.endAt(spec.to);\n        if (spec.first) ref = ref.limitToFirst(spec.first);\n        else if (spec.last) ref = ref.limitToLast(spec.last);\n      }\n      return ref;\n    } catch (e) {\n      e.extra = {url, spec};\n      throw e;\n    }\n  }\n\n  static expose(fn, name) {\n    name = name || fn.name;\n    if (!name) throw new Error('Cannot expose a function with no name: ' + fn);\n    if (Fireworker._exposed.hasOwnProperty(name)) {\n      throw new Error(`Function ${name}() already exposed`);\n    }\n    if (Fireworker._firstMessageReceived) {\n      throw new Error('Too late to expose function, worker in use');\n    }\n    Fireworker._exposed[name] = fn;\n  }\n}\n\nFireworker._exposed = {};\nFireworker._firstMessageReceived = false;\n\nfunction errorToJson(error) {\n  const json = {name: error.name, message: error.message};\n  const propertyNames = Object.getOwnPropertyNames(error);\n  for (const propertyName of propertyNames) {\n    json[propertyName] = error[propertyName];\n  }\n  return json;\n}\n\nfunction normalizeFirebaseValue(value) {\n  if (Array.isArray(value)) {\n    const normalValue = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      if (item === undefined || item === null) continue;\n      normalValue[i] = normalizeFirebaseValue(item);\n    }\n    return normalValue;\n  }\n  if (value instanceof Object) {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) value[key] = normalizeFirebaseValue(value[key]);\n    }\n  }\n  return value;\n}\n\nfunction userToJson(user) {\n  if (!user) return Promise.resolve(user);\n  const json = user.toJSON();\n  delete json.stsTokenManager;\n  return user.getIdTokenResult().then(result => {\n    delete result.token;\n    json.idToken = result;\n    return json;\n  });\n}\n\n\nfunction areEqualNormalFirebaseValues(a, b) {\n  if (a === b) return true;\n  if ((a === null || a === undefined) && (b === null || b === undefined)) return true;\n  if (a === null || b === null) return false;\n  if (!(typeof a === 'object' && typeof b === 'object')) return false;\n  for (const key in a) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n    if (!areEqualNormalFirebaseValues(a[key], b[key])) return false;\n  }\n  for (const key in b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n  }\n  return true;\n}\n\nfunction acceptConnections() {\n  if (typeof onconnect !== 'undefined') {\n    self.onconnect = function(event) {\n      fireworkers.push(new Fireworker(event.ports[0]));\n    };\n  } else {\n    fireworkers.push(new Fireworker(self));\n  }\n  self.localStorage.flushPending();\n}\n\nself.window = self;\nacceptConnections();\n"]}