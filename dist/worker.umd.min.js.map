{"version":3,"sources":["../src/worker.js"],"names":["interceptConsoleLog","consoleIntercepted","const","lastTestIndex","originalLog","console","log","let","message","Array","prototype","join","call","arguments","test","apply","replace","match","g1","g2","simulationConsoleLogs","undefined","length","pop","push","errorToJson","error","json","name","propertyNames","Object","getOwnPropertyNames","i","list","propertyName","createRef","url","spec","context","ref","Firebase","by","orderByKey","orderByValue","orderByChild","at","equalTo","from","startAt","to","endAt","first","limitToFirst","last","limitToLast","e","extra","normalizeFirebaseValue","value","isArray","normalValue","item","key","hasOwnProperty","areEqualNormalFirebaseValues","a","b","acceptConnections","onconnect","self","event","fireworkers","Fireworker","ports","localStorage","flushPending","simulationQueue","Promise","resolve","LocalStorage","this","_items","_pendingItems","_initialized","_flushPending","bind","init","items","_update","then","setTimeout","_send","msg","prototypeAccessors","get","n","getItem","setItem","targetItem","removeItem","this$1","splice","clear","Branch","_root","set","diff","pathPrefix","updates","segments","split","_diffRecursively","oldValue","newValue","keysToReplace","childKey","replaceChild","concat","port","ping","_port","_lastWriteSerial","_callbacks","_messages","_flushMessageQueue","onmessage","_receive","storage","exposedFunctionNames","keys","_exposed","version","firebaseSdkVersion","SDK_VERSION","destroy","callback","cancel","k","indexOf","lastTouched","Date","now","bounceConnection","goOffline","goOnline","_firstMessageReceived","data","_receiveMessage","promise","fn","Error","writeSerial","Math","max","immediateFailure","reject","oneWay","result","id","postMessage","args","authWithCustomToken","authToken","options","unauth","onAuth","callbackId","authCallback","_onAuthCallback","_offAuth","offAuth","auth","update","once","snapshot","_snapshotToJson","on","listenerKey","eventType","sync","branch","off","snapshotCallback","_onSnapshotCallback","cancelCallback","_onCancelCallback","rest","path","decodeURIComponent","toString","val","childPath","snapshotJson","transaction","ref$1","stale","relativeUpdates","transactionPath","relativePath","object","child","catch","committed","snapshots","onDisconnect","method","simulate","token","simulatedFirebase","remember","code","toLowerCase","expose","lastConnectionCheck","setInterval","gap","forEach","worker","window"],"mappings":"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","file":"worker.umd.min.js","sourcesContent":["/* globals Firebase, setTimeout, setInterval */\n\nconst fireworkers = [];\nlet simulationQueue = Promise.resolve(), consoleIntercepted = false, simulationConsoleLogs;\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nclass LocalStorage {\n  constructor() {\n    this._items = [];\n    this._pendingItems = [];\n    this._initialized = false;\n    this._flushPending = this.flushPending.bind(this);\n  }\n\n  init(items) {\n    if (!this._initialized) {\n      this._items = items;\n      this._initialized = true;\n    }\n  }\n\n  _update(item) {\n    if (!this._pendingItems.length) Promise.resolve().then(this._flushPending);\n    this._pendingItems.push(item);\n  }\n\n  flushPending() {\n    if (!this._pendingItems.length) return;\n    if (!fireworkers.length) {\n      setTimeout(this._flushPending, 200);\n      return;\n    }\n    fireworkers[0]._send({msg: 'updateLocalStorage', items: this._pendingItems});\n    this._pendingItems = [];\n  }\n\n  get length() {return this._items.length;}\n\n  key(n) {\n    return this._items[n].key;\n  }\n\n  getItem(key) {\n    for (const item of this._items) {\n      if (item.key === key) return item.value;\n    }\n    return null;\n  }\n\n  setItem(key, value) {\n    let targetItem;\n    for (const item of this._items) {\n      if (item.key === key) {\n        targetItem = item;\n        item.value = value;\n        break;\n      }\n    }\n    if (!targetItem) {\n      targetItem = {key, value};\n      this._items.push(targetItem);\n    }\n    this._update(targetItem);\n  }\n\n  removeItem(key) {\n    for (let i = 0; i < this._items.length; i++) {\n      if (this._items[i].key === key) {\n        this._items.splice(i, 1);\n        this._update({key, value: null});\n        break;\n      }\n    }\n  }\n\n  clear() {\n    for (const item in this._items) {\n      this._update({key: item.key, value: null});\n    }\n    this._items = [];\n  }\n}\n\nself.localStorage = new LocalStorage();\n\n\nclass Branch {\n  constructor() {\n    this._root = null;\n  }\n\n  set(value) {\n    this._root = value;\n  }\n\n  diff(value, pathPrefix) {\n    const updates = {};\n    const segments = pathPrefix === '/' ? [''] : pathPrefix.split('/');\n    if (this._diffRecursively(this._root, value, segments, updates)) {\n      this._root = value;\n      updates[pathPrefix] = value;\n    }\n    return updates;\n  }\n\n  _diffRecursively(oldValue, newValue, segments, updates) {\n    if (oldValue === undefined) oldValue = null;\n    if (newValue === undefined) newValue = null;\n    if (oldValue === null) return newValue !== null;\n    if (oldValue instanceof Object && newValue instanceof Object) {\n      let replace = true;\n      const keysToReplace = [];\n      for (const childKey in newValue) {\n        if (!newValue.hasOwnProperty(childKey)) continue;\n        const replaceChild = this._diffRecursively(\n          oldValue[childKey], newValue[childKey], segments.concat(childKey), updates);\n        if (replaceChild) {\n          keysToReplace.push(childKey);\n        } else {\n          replace = false;\n        }\n      }\n      if (replace) return true;\n      for (const childKey in oldValue) {\n        if (!oldValue.hasOwnProperty(childKey) || newValue.hasOwnProperty(childKey)) continue;\n        updates[segments.concat(childKey).join('/')] = null;\n        delete oldValue[childKey];\n      }\n      for (const childKey of keysToReplace) {\n        updates[segments.concat(childKey).join('/')] = newValue[childKey];\n        oldValue[childKey] = newValue[childKey];\n      }\n    } else {\n      return newValue !== oldValue;\n    }\n  }\n}\n\n\nexport default class Fireworker {\n  constructor(port) {\n    this.ping();\n    this._port = port;\n    this._lastWriteSerial = 0;\n    this._callbacks = {};\n    this._messages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    port.onmessage = this._receive.bind(this);\n  }\n\n  init({storage, url}) {\n    if (storage) self.localStorage.init(storage);\n    if (url) createRef(url);\n    return {\n      exposedFunctionNames: Object.keys(Fireworker._exposed),\n      version: VERSION,\n      firebaseSdkVersion: Firebase.SDK_VERSION\n    };\n  }\n\n  destroy() {\n    for (const key in this._callbacks) {\n      const callback = this._callbacks[key];\n      if (callback.cancel) callback.cancel();\n    }\n    this._callbacks = {};\n    this._port.onmessage = null;\n    this._messages = [];\n    const k = fireworkers.indexOf(this);\n    if (k >= 0) fireworkers[k] = null;\n  }\n\n  ping() {\n    this.lastTouched = Date.now();\n  }\n\n  bounceConnection() {\n    Firebase.goOffline();\n    Firebase.goOnline();\n  }\n\n  _receive(event) {\n    Fireworker._firstMessageReceived = true;\n    this.lastTouched = Date.now();\n    for (const message of event.data) this._receiveMessage(message);\n  }\n\n  _receiveMessage(message) {\n    let promise;\n    try {\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      if (message.writeSerial) {\n        this._lastWriteSerial = Math.max(this._lastWriteSerial, message.writeSerial);\n      }\n      promise = Promise.resolve(fn.call(this, message));\n    } catch (e) {\n      e.immediateFailure = true;\n      promise = Promise.reject(e);\n    }\n    if (!message.oneWay) {\n      promise.then(result => {\n        this._send({msg: 'resolve', id: message.id, result});\n      }, error => {\n        this._send({msg: 'reject', id: message.id, error: errorToJson(error)});\n      });\n    }\n  }\n\n  _send(message) {\n    if (!this._messages.length) Promise.resolve().then(this._flushMessageQueue);\n    this._messages.push(message);\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._messages);\n    this._messages = [];\n  }\n\n  call({name, args}) {\n    try {\n      return Promise.resolve(Fireworker._exposed[name].apply(null, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  authWithCustomToken({url, authToken, options}) {\n    return createRef(url).authWithCustomToken(authToken, options);\n  }\n\n  unauth({url}) {\n    return createRef(url).unauth();\n  }\n\n  onAuth({url, callbackId}) {\n    const authCallback = this._callbacks[callbackId] = this._onAuthCallback.bind(this, callbackId);\n    authCallback.cancel = this._offAuth.bind(this, url, authCallback);\n    createRef(url).onAuth(authCallback);\n  }\n\n  _offAuth(url, authCallback) {\n    createRef(url).offAuth(authCallback);\n  }\n\n  _onAuthCallback(callbackId, auth) {\n    this._send({msg: 'callback', id: callbackId, args: [auth]});\n  }\n\n  set({url, value}) {\n    return createRef(url).set(value);\n  }\n\n  update({url, value}) {\n    return createRef(url).update(value);\n  }\n\n  once({url}) {\n    return createRef(url).once('value').then(snapshot => this._snapshotToJson(snapshot));\n  }\n\n  on({listenerKey, url, spec, eventType, callbackId, options}) {\n    options = options || {};\n    if (options.sync) options.branch = new Branch();\n    options.cancel = this.off.bind(this, {listenerKey, url, spec, eventType, callbackId});\n    const snapshotCallback = this._callbacks[callbackId] =\n      this._onSnapshotCallback.bind(this, callbackId, options);\n    snapshotCallback.listenerKey = listenerKey;\n    snapshotCallback.eventType = eventType;\n    snapshotCallback.cancel = options.cancel;\n    const cancelCallback = this._onCancelCallback.bind(this, callbackId);\n    createRef(url, spec).on(eventType, snapshotCallback, cancelCallback);\n  }\n\n  off({listenerKey, url, spec, eventType, callbackId}) {\n    let snapshotCallback;\n    if (callbackId) {\n      // Callback IDs will not be reused across on() calls, so it's safe to just delete it.\n      snapshotCallback = this._callbacks[callbackId];\n      delete this._callbacks[callbackId];\n    } else {\n      for (const key of Object.keys(this._callbacks)) {\n        if (!this._callbacks.hasOwnProperty(key)) continue;\n        const callback = this._callbacks[key];\n        if (callback.listenerKey === listenerKey &&\n            (!eventType || callback.eventType === eventType)) {\n          delete this._callbacks[key];\n        }\n      }\n    }\n    createRef(url, spec).off(eventType, snapshotCallback);\n  }\n\n  _onSnapshotCallback(callbackId, options, snapshot) {\n    if (options.sync && options.rest) {\n      const path = decodeURIComponent(\n        snapshot.ref().toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n      let value;\n      try {\n        value = normalizeFirebaseValue(snapshot.val());\n      } catch (e) {\n        options.cancel();\n        this._onCancelCallback(callbackId, e);\n        return;\n      }\n      const updates = options.branch.diff(value, path);\n      for (const childPath in updates) {\n        if (!updates.hasOwnProperty(childPath)) continue;\n        this._send({\n          msg: 'callback', id: callbackId,\n          args: [null, {\n            path: childPath, value: updates[childPath], writeSerial: this._lastWriteSerial\n          }]\n        });\n      }\n    } else {\n      try {\n        const snapshotJson = this._snapshotToJson(snapshot);\n        if (options.sync) options.branch.set(snapshotJson.value);\n        this._send({msg: 'callback', id: callbackId, args: [null, snapshotJson]});\n        options.rest = true;\n      } catch (e) {\n        options.cancel();\n        this._onCancelCallback(callbackId, e);\n      }\n    }\n  }\n\n  _onCancelCallback(callbackId, error) {\n    delete this._callbacks[callbackId];\n    this._send({msg: 'callback', id: callbackId, args: [errorToJson(error)]});\n  }\n\n  transaction({url, oldValue, relativeUpdates}) {\n    const transactionPath = decodeURIComponent(url.replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    const ref = createRef(url);\n    const branch = new Branch();\n    let stale;\n\n    return ref.transaction(value => {\n      value = normalizeFirebaseValue(value);\n      stale = !areEqualNormalFirebaseValues(value, oldValue);\n      if (stale) value = oldValue;\n      if (relativeUpdates) {\n        for (const relativePath in relativeUpdates) {\n          if (!relativeUpdates.hasOwnProperty(relativePath)) continue;\n          if (relativePath) {\n            const segments = relativePath.split('/');\n            if (value === undefined || value === null) value = {};\n            let object = value;\n            for (let i = 0; i < segments.length - 1; i++) {\n              const key = segments[i];\n              let child = object[key];\n              if (child === undefined || child === null) child = object[key] = {};\n              object = child;\n            }\n            object[segments[segments.length - 1]] = relativeUpdates[relativePath];\n          } else {\n            value = relativeUpdates[relativePath];\n          }\n        }\n      }\n      branch.set(value);\n      if (!stale) return value;\n    }).catch(error => {\n      if (error.message === 'set' || error.message === 'disconnect') {\n        return ref.once('value').then(snapshot => {\n          return {committed: false, snapshots: [snapshot], writeSerial: this._lastWriteSerial};\n        });\n      }\n      return Promise.reject(error);\n    }).then(result => {\n      const snapshots = [];\n      const updates = branch.diff(normalizeFirebaseValue(result.snapshot.val()), transactionPath);\n      for (const path in updates) {\n        if (!updates.hasOwnProperty(path)) continue;\n        snapshots.push({\n          path, value: updates[path], writeSerial: result.writeSerial || this._lastWriteSerial\n        });\n      }\n      return {committed: !stale, snapshots};\n    });\n  }\n\n  _snapshotToJson(snapshot) {\n    const path =\n      decodeURIComponent(snapshot.ref().toString().replace(/.*?:\\/\\/[^/]*/, '').replace(/\\/$/, ''));\n    return {\n      path, value: normalizeFirebaseValue(snapshot.val()), writeSerial: this._lastWriteSerial\n    };\n  }\n\n  onDisconnect({url, method, value}) {\n    const onDisconnect = createRef(url).onDisconnect();\n    return onDisconnect[method](value);\n  }\n\n  simulate({token, method, url, spec, args}) {\n    interceptConsoleLog();\n    let simulatedFirebase;\n    return (simulationQueue = simulationQueue.catch(() => {/* ignore */}).then(() => {\n      simulationConsoleLogs = [];\n      simulatedFirebase = createRef(url, spec, 'permission_denied_simulator');\n      simulatedFirebase.unauth();\n      return simulatedFirebase.authWithCustomToken(token, () => {/* ignore */}, {remember: 'none'});\n    }).then(() => {\n      return simulatedFirebase[method].apply(simulatedFirebase, args);\n    }).then(() => {\n      return null;\n    }, e => {\n      const code = e.code || e.message;\n      if (code && code.toLowerCase() === 'permission_denied') {\n        return simulationConsoleLogs.join('\\n');\n      }\n      return 'Got a different error in simulation: ' + e;\n    }));\n  }\n\n  static expose(fn, name) {\n    name = name || fn.name;\n    if (!name) throw new Error('Cannot expose a function with no name: ' + fn);\n    if (Fireworker._exposed.hasOwnProperty(name)) {\n      throw new Error(`Function ${name}() already exposed`);\n    }\n    if (Fireworker._firstMessageReceived) {\n      throw new Error('Too late to expose function, worker in use');\n    }\n    Fireworker._exposed[name] = fn;\n  }\n}\n\nFireworker._exposed = {};\nFireworker._firstMessageReceived = false;\n\n\nfunction interceptConsoleLog() {\n  if (consoleIntercepted) return;\n  const originalLog = console.log;\n  let lastTestIndex;\n  console.log = function() {\n    let message = Array.prototype.join.call(arguments, ' ');\n    if (!/^(FIREBASE: \\n?)+/.test(message)) return originalLog.apply(console, arguments);\n    message = message\n      .replace(/^(FIREBASE: \\n?)+/, '')\n      .replace(/^\\s+([^.]*):(?:\\.(read|write|validate):)?.*/g, function(match, g1, g2) {\n        g2 = g2 || 'read';\n        return ' ' + g2 + ' ' + g1;\n      });\n    if (/^\\s+/.test(message)) {\n      const match = message.match(/^\\s+=> (true|false)/);\n      if (match) {\n        simulationConsoleLogs[lastTestIndex] =\n          (match[1] === 'true' ? ' \\u2713' : ' \\u2717') + simulationConsoleLogs[lastTestIndex];\n        lastTestIndex = undefined;\n      } else {\n        if (lastTestIndex === simulationConsoleLogs.length - 1) simulationConsoleLogs.pop();\n        simulationConsoleLogs.push(message);\n        lastTestIndex = simulationConsoleLogs.length - 1;\n      }\n    } else if (/^\\d+:\\d+: /.test(message)) {\n      simulationConsoleLogs.push('   ' + message);\n    } else {\n      if (lastTestIndex === simulationConsoleLogs.length - 1) simulationConsoleLogs.pop();\n      simulationConsoleLogs.push(message);\n      lastTestIndex = undefined;\n    }\n  };\n  consoleIntercepted = true;\n}\n\nfunction errorToJson(error) {\n  const json = {name: error.name};\n  const propertyNames = Object.getOwnPropertyNames(error);\n  for (const propertyName of propertyNames) {\n    json[propertyName] = error[propertyName];\n  }\n  return json;\n}\n\nfunction createRef(url, spec, context) {\n  try {\n    let ref = new Firebase(url, context);\n    if (spec) {\n      switch (spec.by) {\n        case '$key': ref = ref.orderByKey(); break;\n        case '$value': ref = ref.orderByValue(); break;\n        default: ref = ref.orderByChild(spec.by); break;\n      }\n      if (spec.at) ref = ref.equalTo(spec.at);\n      else if (spec.from) ref = ref.startAt(spec.from);\n      else if (spec.to) ref = ref.endAt(spec.to);\n      if (spec.first) ref = ref.limitToFirst(spec.first);\n      else if (spec.last) ref = ref.limitToLast(spec.last);\n    }\n    return ref;\n  } catch (e) {\n    e.extra = {url, spec, context};\n    throw e;\n  }\n}\n\nfunction normalizeFirebaseValue(value) {\n  if (Array.isArray(value)) {\n    const normalValue = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      if (item === undefined || item === null) continue;\n      normalValue[i] = normalizeFirebaseValue(item);\n    }\n    return normalValue;\n  }\n  if (value instanceof Object) {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) value[key] = normalizeFirebaseValue(value[key]);\n    }\n  }\n  return value;\n}\n\n\nfunction areEqualNormalFirebaseValues(a, b) {\n  if (a === b) return true;\n  if ((a === null || a === undefined) && (b === null || b === undefined)) return true;\n  if (a === null || b === null) return false;\n  if (!(typeof a === 'object' && typeof b === 'object')) return false;\n  for (const key in a) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n    if (!areEqualNormalFirebaseValues(a[key], b[key])) return false;\n  }\n  for (const key in b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return false;\n  }\n  return true;\n}\n\nfunction acceptConnections() {\n  if (typeof onconnect !== 'undefined') {\n    self.onconnect = function(event) {\n      fireworkers.push(new Fireworker(event.ports[0]));\n    };\n  } else {\n    fireworkers.push(new Fireworker(self));\n  }\n  self.localStorage.flushPending();\n}\n\nconst CONNECTION_CHECK_INTERVAL = 60 * 1000;\nlet lastConnectionCheck = Date.now();\nsetInterval(function findAbandonedConnections() {\n  const now = Date.now(), gap = now - lastConnectionCheck - CONNECTION_CHECK_INTERVAL;\n  lastConnectionCheck = now;\n  fireworkers.forEach(worker => {\n    if (!worker) return;\n    if (gap >= 1000 && worker.lastTouched <= now - gap) worker.lastTouched += gap;\n    if (now - worker.lastTouched >= 3 * CONNECTION_CHECK_INTERVAL) worker.destroy();\n  });\n  let k;\n  while ((k = fireworkers.indexOf(null)) >= 0) fireworkers.splice(k, 1);\n}, CONNECTION_CHECK_INTERVAL);\n\nself.window = self;\nacceptConnections();\n"]}